import {
  require_react_dom
} from "./chunk-WXXXOI4T.js";
import {
  require_react
} from "./chunk-IXSHOAML.js";
import {
  __commonJS,
  __esm,
  __export,
  __reExport,
  __toCommonJS,
  __toESM
} from "./chunk-7TBCKYSC.js";

// vite:dep-pre-bundle:external-conversion:C:/Users/ltdeo/Desktop/codepath/SITE-Capstone/site-capstone/Frontend/node_modules/react-clock/dist/Clock.css
var Clock_exports = {};
__export(Clock_exports, {
  default: () => default2
});
import { default as default2 } from "C:/Users/ltdeo/Desktop/codepath/SITE-Capstone/site-capstone/Frontend/node_modules/react-clock/dist/Clock.css";
import * as Clock_star from "C:/Users/ltdeo/Desktop/codepath/SITE-Capstone/site-capstone/Frontend/node_modules/react-clock/dist/Clock.css";
var init_Clock = __esm({
  "vite:dep-pre-bundle:external-conversion:C:/Users/ltdeo/Desktop/codepath/SITE-Capstone/site-capstone/Frontend/node_modules/react-clock/dist/Clock.css"() {
    __reExport(Clock_exports, Clock_star);
  }
});

// node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
          return test2[n];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "node_modules/prop-types/lib/has.js"(exports, module) {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = require_has();
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                err.name = "Invariant Violation";
                throw err;
              }
              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning((componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).");
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning("Failed " + location + " type: " + error.message + (stack != null ? stack : ""));
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is();
    var assign = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
                printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.");
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."), { expectedType });
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning("Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).");
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== "function") {
            printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + ".");
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
            var checker2 = arrayOfTypeCheckers[i2];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError((componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`.");
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError("Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  "));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/make-event-props/dist/esm/index.js
var esm_exports = {};
__export(esm_exports, {
  allEvents: () => allEvents,
  animationEvents: () => animationEvents,
  clipboardEvents: () => clipboardEvents,
  compositionEvents: () => compositionEvents,
  default: () => esm_default,
  focusEvents: () => focusEvents,
  formEvents: () => formEvents,
  genericEvents: () => genericEvents,
  imageEvents: () => imageEvents,
  keyboardEvents: () => keyboardEvents,
  mediaEvents: () => mediaEvents,
  mouseEvents: () => mouseEvents,
  otherEvents: () => otherEvents,
  pointerEvents: () => pointerEvents,
  selectionEvents: () => selectionEvents,
  touchEvents: () => touchEvents,
  transitionEvents: () => transitionEvents,
  uiEvents: () => uiEvents,
  wheelEvents: () => wheelEvents
});
var clipboardEvents, compositionEvents, keyboardEvents, focusEvents, formEvents, genericEvents, mouseEvents, pointerEvents, selectionEvents, touchEvents, uiEvents, wheelEvents, mediaEvents, imageEvents, animationEvents, transitionEvents, otherEvents, allEvents, makeEventProps, esm_default;
var init_esm = __esm({
  "node_modules/make-event-props/dist/esm/index.js"() {
    clipboardEvents = ["onCopy", "onCut", "onPaste"];
    compositionEvents = ["onCompositionEnd", "onCompositionStart", "onCompositionUpdate"];
    keyboardEvents = ["onKeyDown", "onKeyPress", "onKeyUp"];
    focusEvents = ["onFocus", "onBlur"];
    formEvents = ["onChange", "onInput", "onInvalid", "onReset", "onSubmit"];
    genericEvents = ["onError", "onLoad"];
    mouseEvents = ["onClick", "onContextMenu", "onDoubleClick", "onDrag", "onDragEnd", "onDragEnter", "onDragExit", "onDragLeave", "onDragOver", "onDragStart", "onDrop", "onMouseDown", "onMouseEnter", "onMouseLeave", "onMouseMove", "onMouseOut", "onMouseOver", "onMouseUp"];
    pointerEvents = ["onPointerDown", "onPointerMove", "onPointerUp", "onPointerCancel", "onGotPointerCapture", "onLostPointerCapture", "onPointerEnter", "onPointerLeave", "onPointerOver", "onPointerOut"];
    selectionEvents = ["onSelect"];
    touchEvents = ["onTouchCancel", "onTouchEnd", "onTouchMove", "onTouchStart"];
    uiEvents = ["onScroll"];
    wheelEvents = ["onWheel"];
    mediaEvents = ["onAbort", "onCanPlay", "onCanPlayThrough", "onDurationChange", "onEmptied", "onEncrypted", "onEnded", "onError", "onLoadedData", "onLoadedMetadata", "onLoadStart", "onPause", "onPlay", "onPlaying", "onProgress", "onRateChange", "onSeeked", "onSeeking", "onStalled", "onSuspend", "onTimeUpdate", "onVolumeChange", "onWaiting"];
    imageEvents = ["onLoad", "onError"];
    animationEvents = ["onAnimationStart", "onAnimationEnd", "onAnimationIteration"];
    transitionEvents = ["onTransitionEnd"];
    otherEvents = ["onToggle"];
    allEvents = [].concat(clipboardEvents, compositionEvents, keyboardEvents, focusEvents, formEvents, genericEvents, mouseEvents, pointerEvents, selectionEvents, touchEvents, uiEvents, wheelEvents, mediaEvents, imageEvents, animationEvents, transitionEvents, otherEvents);
    makeEventProps = function makeEventProps2(props, getArgs) {
      var eventProps = {};
      allEvents.forEach(function(eventName) {
        if (!(eventName in props)) {
          return;
        }
        if (!getArgs) {
          eventProps[eventName] = props[eventName];
          return;
        }
        eventProps[eventName] = function(event) {
          return props[eventName](event, getArgs(eventName));
        };
      });
      return eventProps;
    };
    esm_default = makeEventProps;
  }
});

// node_modules/merge-class-names/dist/esm/index.js
var esm_exports2 = {};
__export(esm_exports2, {
  default: () => mergeClassNames
});
function mergeClassNames() {
  return Array.prototype.slice.call(arguments).reduce(function(classList, arg) {
    return classList.concat(arg);
  }, []).filter(function(arg) {
    return typeof arg === "string";
  }).join(" ");
}
var init_esm2 = __esm({
  "node_modules/merge-class-names/dist/esm/index.js"() {
  }
});

// node_modules/detect-element-overflow/dist/esm/index.js
var getRect, detectElementOverflow, esm_default2;
var init_esm3 = __esm({
  "node_modules/detect-element-overflow/dist/esm/index.js"() {
    getRect = function getRect2(element) {
      return element.getBoundingClientRect();
    };
    detectElementOverflow = function detectElementOverflow2(element, container) {
      return {
        get collidedTop() {
          return getRect(element).top < getRect(container).top;
        },
        get collidedBottom() {
          return getRect(element).bottom > getRect(container).bottom;
        },
        get collidedLeft() {
          return getRect(element).left < getRect(container).left;
        },
        get collidedRight() {
          return getRect(element).right > getRect(container).right;
        },
        get overflowTop() {
          return getRect(container).top - getRect(element).top;
        },
        get overflowBottom() {
          return getRect(element).bottom - getRect(container).bottom;
        },
        get overflowLeft() {
          return getRect(container).left - getRect(element).left;
        },
        get overflowRight() {
          return getRect(element).right - getRect(container).right;
        }
      };
    };
    esm_default2 = detectElementOverflow;
  }
});

// node_modules/tiny-warning/dist/tiny-warning.esm.js
function warning(condition, message) {
  if (!isProduction) {
    if (condition) {
      return;
    }
    var text = "Warning: " + message;
    if (typeof console !== "undefined") {
      console.warn(text);
    }
    try {
      throw Error(text);
    } catch (x) {
    }
  }
}
var isProduction, tiny_warning_esm_default;
var init_tiny_warning_esm = __esm({
  "node_modules/tiny-warning/dist/tiny-warning.esm.js"() {
    isProduction = false;
    tiny_warning_esm_default = warning;
  }
});

// node_modules/react-fit/dist/esm/Fit.js
var Fit_exports = {};
__export(Fit_exports, {
  default: () => Fit
});
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  return Constructor;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  if (superClass)
    _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}
function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf(o);
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _typeof(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof3(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof = function _typeof3(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof(obj);
}
function capitalize(a) {
  return a[0].toUpperCase() + a.slice(1);
}
function findScrollContainer(element) {
  if (!element) {
    return void 0;
  }
  var parent = element.parentElement;
  while (parent) {
    var _window$getComputedSt = window.getComputedStyle(parent), overflow = _window$getComputedSt.overflow;
    if (overflow.split(" ").every(function(o) {
      return o === "auto" || o === "scroll";
    })) {
      return parent;
    }
    parent = parent.parentElement;
  }
  return document.documentElement;
}
function alignAxis(_ref) {
  var axis = _ref.axis, container = _ref.container, element = _ref.element, invertAxis = _ref.invertAxis, secondary = _ref.secondary, scrollContainer = _ref.scrollContainer, spacing = _ref.spacing;
  var style = window.getComputedStyle(element);
  var parent = container.parentElement;
  var scrollContainerCollisions = esm_default2(parent, scrollContainer);
  var documentCollisions = esm_default2(parent, document.documentElement);
  var isX = axis === "x";
  var startProperty = isX ? "left" : "top";
  var endProperty = isX ? "right" : "bottom";
  var sizeProperty = isX ? "width" : "height";
  var overflowStartProperty = "overflow".concat(capitalize(startProperty));
  var overflowEndProperty = "overflow".concat(capitalize(endProperty));
  var scrollProperty = "scroll".concat(capitalize(startProperty));
  var uppercasedSizeProperty = capitalize(sizeProperty);
  var offsetSizeProperty = "offset".concat(uppercasedSizeProperty);
  var clientSizeProperty = "client".concat(uppercasedSizeProperty);
  var minSizeProperty = "min-".concat(sizeProperty);
  var scrollbarWidth = scrollContainer[offsetSizeProperty] - scrollContainer[clientSizeProperty];
  var startSpacing = _typeof(spacing) === "object" ? spacing[startProperty] : spacing;
  var availableStartSpace = -Math.max(scrollContainerCollisions[overflowStartProperty], documentCollisions[overflowStartProperty] + document.documentElement[scrollProperty]) - startSpacing;
  var endSpacing = _typeof(spacing) === "object" ? spacing[endProperty] : spacing;
  var availableEndSpace = -Math.max(scrollContainerCollisions[overflowEndProperty], documentCollisions[overflowEndProperty] - document.documentElement[scrollProperty]) - endSpacing - scrollbarWidth;
  if (secondary) {
    availableStartSpace += parent[clientSizeProperty];
    availableEndSpace += parent[clientSizeProperty];
  }
  var offsetSize = element[offsetSizeProperty];
  function displayStart() {
    element.style[startProperty] = "auto";
    element.style[endProperty] = secondary ? "0" : "100%";
  }
  function displayEnd() {
    element.style[startProperty] = secondary ? "0" : "100%";
    element.style[endProperty] = "auto";
  }
  function displayIfFits(availableSpace, display) {
    var fits2 = offsetSize <= availableSpace;
    if (fits2) {
      display();
    }
    return fits2;
  }
  function displayStartIfFits() {
    return displayIfFits(availableStartSpace, displayStart);
  }
  function displayEndIfFits() {
    return displayIfFits(availableEndSpace, displayEnd);
  }
  function displayWhereverShrinkedFits() {
    var moreSpaceStart = availableStartSpace > availableEndSpace;
    var minSize = style[minSizeProperty] && parseInt(style[minSizeProperty], 10);
    function shrinkToSize(size) {
      tiny_warning_esm_default(!minSize || size >= minSize, "<Fit />'s child will not fit anywhere with its current ".concat(minSizeProperty, " of ").concat(minSize, "px."));
      var newSize = Math.max(size, minSize || 0);
      tiny_warning_esm_default(false, "<Fit />'s child needed to have its ".concat(sizeProperty, " decreased to ").concat(newSize, "px."));
      element.style[sizeProperty] = "".concat(newSize, "px");
    }
    if (moreSpaceStart) {
      shrinkToSize(availableStartSpace);
      displayStart();
    } else {
      shrinkToSize(availableEndSpace);
      displayEnd();
    }
  }
  var fits;
  if (invertAxis) {
    fits = displayStartIfFits() || displayEndIfFits();
  } else {
    fits = displayEndIfFits() || displayStartIfFits();
  }
  if (!fits) {
    displayWhereverShrinkedFits();
  }
}
function alignMainAxis(args) {
  alignAxis(args);
}
function alignSecondaryAxis(args) {
  alignAxis(_objectSpread(_objectSpread({}, args), {}, {
    axis: args.axis === "x" ? "y" : "x",
    secondary: true
  }));
}
function alignBothAxis(args) {
  var invertAxis = args.invertAxis, invertSecondaryAxis = args.invertSecondaryAxis, commonArgs = _objectWithoutProperties(args, _excluded);
  alignMainAxis(_objectSpread(_objectSpread({}, commonArgs), {}, {
    invertAxis
  }));
  alignSecondaryAxis(_objectSpread(_objectSpread({}, commonArgs), {}, {
    invertAxis: invertSecondaryAxis
  }));
}
var import_react, import_react_dom, import_prop_types, _excluded, isBrowser, isDisplayContentsSupported, isMutationObserverSupported, Fit;
var init_Fit = __esm({
  "node_modules/react-fit/dist/esm/Fit.js"() {
    import_react = __toESM(require_react());
    import_react_dom = __toESM(require_react_dom());
    import_prop_types = __toESM(require_prop_types());
    init_esm3();
    init_tiny_warning_esm();
    _excluded = ["invertAxis", "invertSecondaryAxis"];
    isBrowser = typeof window !== "undefined";
    isDisplayContentsSupported = isBrowser && "CSS" in window && "supports" in window.CSS && CSS.supports("display", "contents");
    isMutationObserverSupported = isBrowser && "MutationObserver" in window;
    Fit = function(_Component) {
      _inherits(Fit2, _Component);
      var _super = _createSuper(Fit2);
      function Fit2() {
        var _this;
        _classCallCheck(this, Fit2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        _defineProperty(_assertThisInitialized(_this), "onMutation", function() {
          _this.fit();
        });
        _defineProperty(_assertThisInitialized(_this), "mutationObserver", isMutationObserverSupported && new MutationObserver(_this.onMutation));
        _defineProperty(_assertThisInitialized(_this), "fit", function() {
          var _assertThisInitialize = _assertThisInitialized(_this), scrollContainer = _assertThisInitialize.scrollContainer, container = _assertThisInitialize.container, element = _assertThisInitialize.element;
          if (!element) {
            return;
          }
          var elementWidth = element.clientWidth;
          var elementHeight = element.clientHeight;
          if (_this.elementWidth === elementWidth && _this.elementHeight === elementHeight) {
            return;
          }
          _this.elementWidth = elementWidth;
          _this.elementHeight = elementHeight;
          var parent = container.parentElement;
          if (!parent) {
            return;
          }
          var style = window.getComputedStyle(element);
          var position = style.position;
          if (position !== "absolute") {
            tiny_warning_esm_default(false, "<Fit />'s child does not have absolute position. You should apply `position: absolute` to it.");
            element.style.position = "absolute";
          }
          var parentStyle = window.getComputedStyle(parent);
          var parentPosition = parentStyle.position;
          if (parentPosition !== "relative" && parentPosition !== "absolute") {
            tiny_warning_esm_default(false, "<Fit />'s parent does not have relative position. You should apply `position: relative` to it.");
            parent.style.position = "relative";
          }
          var _this$props = _this.props, invertAxis = _this$props.invertAxis, invertSecondaryAxis = _this$props.invertSecondaryAxis, mainAxis = _this$props.mainAxis, spacing = _this$props.spacing;
          alignBothAxis({
            container,
            element,
            invertAxis,
            invertSecondaryAxis,
            axis: mainAxis,
            scrollContainer,
            spacing
          });
        });
        return _this;
      }
      _createClass(Fit2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          if (!isDisplayContentsSupported) {
            var element = (0, import_react_dom.findDOMNode)(this);
            this.container = element;
            this.element = element;
            this.scrollContainer = findScrollContainer(element);
          }
          this.fit();
          if (isMutationObserverSupported) {
            this.mutationObserver.observe(this.element, {
              attributes: true,
              attributeFilter: ["class", "style"]
            });
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          var children = this.props.children;
          var child = import_react.default.Children.only(children);
          if (isDisplayContentsSupported) {
            return import_react.default.createElement("span", {
              ref: function ref(container) {
                _this2.container = container;
                var element = container && container.firstChild;
                _this2.element = element;
                _this2.scrollContainer = findScrollContainer(element);
              },
              style: {
                display: "contents"
              }
            }, child);
          }
          return child;
        }
      }]);
      return Fit2;
    }(import_react.Component);
    Fit.propTypes = {
      children: import_prop_types.default.node,
      invertAxis: import_prop_types.default.bool,
      invertSecondaryAxis: import_prop_types.default.bool,
      mainAxis: import_prop_types.default.oneOf(["x", "y"]),
      spacing: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.shape({
        bottom: import_prop_types.default.number.isRequired,
        left: import_prop_types.default.number.isRequired,
        right: import_prop_types.default.number.isRequired,
        top: import_prop_types.default.number.isRequired
      })])
    };
    Fit.defaultProps = {
      mainAxis: "y",
      spacing: 8
    };
  }
});

// node_modules/@wojtekmaj/date-utils/dist/esm/index.js
var esm_exports3 = {};
__export(esm_exports3, {
  getCenturyEnd: () => getCenturyEnd,
  getCenturyRange: () => getCenturyRange,
  getCenturyStart: () => getCenturyStart,
  getDate: () => getDate,
  getDayEnd: () => getDayEnd,
  getDayRange: () => getDayRange,
  getDayStart: () => getDayStart,
  getDaysInMonth: () => getDaysInMonth,
  getDecadeEnd: () => getDecadeEnd,
  getDecadeRange: () => getDecadeRange,
  getDecadeStart: () => getDecadeStart,
  getHours: () => getHours,
  getHoursMinutes: () => getHoursMinutes,
  getHoursMinutesSeconds: () => getHoursMinutesSeconds,
  getISOLocalDate: () => getISOLocalDate,
  getISOLocalDateTime: () => getISOLocalDateTime,
  getISOLocalMonth: () => getISOLocalMonth,
  getMinutes: () => getMinutes,
  getMonth: () => getMonth,
  getMonthEnd: () => getMonthEnd,
  getMonthHuman: () => getMonthHuman,
  getMonthRange: () => getMonthRange,
  getMonthStart: () => getMonthStart,
  getNextCenturyEnd: () => getNextCenturyEnd,
  getNextCenturyStart: () => getNextCenturyStart,
  getNextDayEnd: () => getNextDayEnd,
  getNextDayStart: () => getNextDayStart,
  getNextDecadeEnd: () => getNextDecadeEnd,
  getNextDecadeStart: () => getNextDecadeStart,
  getNextMonthEnd: () => getNextMonthEnd,
  getNextMonthStart: () => getNextMonthStart,
  getNextYearEnd: () => getNextYearEnd,
  getNextYearStart: () => getNextYearStart,
  getPreviousCenturyEnd: () => getPreviousCenturyEnd,
  getPreviousCenturyStart: () => getPreviousCenturyStart,
  getPreviousDayEnd: () => getPreviousDayEnd,
  getPreviousDayStart: () => getPreviousDayStart,
  getPreviousDecadeEnd: () => getPreviousDecadeEnd,
  getPreviousDecadeStart: () => getPreviousDecadeStart,
  getPreviousMonthEnd: () => getPreviousMonthEnd,
  getPreviousMonthStart: () => getPreviousMonthStart,
  getPreviousYearEnd: () => getPreviousYearEnd,
  getPreviousYearStart: () => getPreviousYearStart,
  getSeconds: () => getSeconds,
  getYear: () => getYear,
  getYearEnd: () => getYearEnd,
  getYearRange: () => getYearRange,
  getYearStart: () => getYearStart
});
function makeGetEdgeOfNeighbor(getPeriod, getEdgeOfPeriod, defaultOffset) {
  return function makeGetEdgeOfNeighborInternal(date) {
    var offset = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultOffset;
    var previousPeriod = getPeriod(date) + offset;
    return getEdgeOfPeriod(previousPeriod);
  };
}
function makeGetEnd(getBeginOfNextPeriod) {
  return function makeGetEndInternal(date) {
    return new Date(getBeginOfNextPeriod(date).getTime() - 1);
  };
}
function makeGetRange(functions) {
  return function makeGetRangeInternal(date) {
    return functions.map(function(fn) {
      return fn(date);
    });
  };
}
function getYear(date) {
  if (date instanceof Date) {
    return date.getFullYear();
  }
  if (typeof date === "number") {
    return date;
  }
  var year = parseInt(date, 10);
  if (typeof date === "string" && !isNaN(year)) {
    return year;
  }
  throw new Error("Failed to get year from date: ".concat(date, "."));
}
function getMonth(date) {
  if (date instanceof Date) {
    return date.getMonth();
  }
  throw new Error("Failed to get month from date: ".concat(date, "."));
}
function getMonthHuman(date) {
  if (date instanceof Date) {
    return date.getMonth() + 1;
  }
  throw new Error("Failed to get human-readable month from date: ".concat(date, "."));
}
function getDate(date) {
  if (date instanceof Date) {
    return date.getDate();
  }
  throw new Error("Failed to get year from date: ".concat(date, "."));
}
function getHours(date) {
  if (date instanceof Date) {
    return date.getHours();
  }
  if (typeof date === "string") {
    var datePieces = date.split(":");
    if (datePieces.length >= 2) {
      var hoursString = datePieces[0];
      var hours = parseInt(hoursString, 10);
      if (!isNaN(hours)) {
        return hours;
      }
    }
  }
  throw new Error("Failed to get hours from date: ".concat(date, "."));
}
function getMinutes(date) {
  if (date instanceof Date) {
    return date.getMinutes();
  }
  if (typeof date === "string") {
    var datePieces = date.split(":");
    if (datePieces.length >= 2) {
      var minutesString = datePieces[1] || 0;
      var minutes = parseInt(minutesString, 10);
      if (!isNaN(minutes)) {
        return minutes;
      }
    }
  }
  throw new Error("Failed to get minutes from date: ".concat(date, "."));
}
function getSeconds(date) {
  if (date instanceof Date) {
    return date.getSeconds();
  }
  if (typeof date === "string") {
    var datePieces = date.split(":");
    if (datePieces.length >= 2) {
      var secondsString = datePieces[2] || 0;
      var seconds = parseInt(secondsString, 10);
      if (!isNaN(seconds)) {
        return seconds;
      }
    }
  }
  throw new Error("Failed to get seconds from date: ".concat(date, "."));
}
function getCenturyStart(date) {
  var year = getYear(date);
  var centuryStartYear = year + (-year + 1) % 100;
  var centuryStartDate = new Date();
  centuryStartDate.setFullYear(centuryStartYear, 0, 1);
  centuryStartDate.setHours(0, 0, 0, 0);
  return centuryStartDate;
}
function getDecadeStart(date) {
  var year = getYear(date);
  var decadeStartYear = year + (-year + 1) % 10;
  var decadeStartDate = new Date();
  decadeStartDate.setFullYear(decadeStartYear, 0, 1);
  decadeStartDate.setHours(0, 0, 0, 0);
  return decadeStartDate;
}
function getYearStart(date) {
  var year = getYear(date);
  var yearStartDate = new Date();
  yearStartDate.setFullYear(year, 0, 1);
  yearStartDate.setHours(0, 0, 0, 0);
  return yearStartDate;
}
function makeGetEdgeOfNeighborMonth(getEdgeOfPeriod, defaultOffset) {
  return function makeGetEdgeOfNeighborMonthInternal(date) {
    var offset = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultOffset;
    var year = getYear(date);
    var month = getMonth(date) + offset;
    var previousPeriod = new Date();
    previousPeriod.setFullYear(year, month, 1);
    previousPeriod.setHours(0, 0, 0, 0);
    return getEdgeOfPeriod(previousPeriod);
  };
}
function getMonthStart(date) {
  var year = getYear(date);
  var month = getMonth(date);
  var monthStartDate = new Date();
  monthStartDate.setFullYear(year, month, 1);
  monthStartDate.setHours(0, 0, 0, 0);
  return monthStartDate;
}
function makeGetEdgeOfNeighborDay(getEdgeOfPeriod, defaultOffset) {
  return function makeGetEdgeOfNeighborDayInternal(date) {
    var offset = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultOffset;
    var year = getYear(date);
    var month = getMonth(date);
    var day = getDate(date) + offset;
    var previousPeriod = new Date();
    previousPeriod.setFullYear(year, month, day);
    previousPeriod.setHours(0, 0, 0, 0);
    return getEdgeOfPeriod(previousPeriod);
  };
}
function getDayStart(date) {
  var year = getYear(date);
  var month = getMonth(date);
  var day = getDate(date);
  var dayStartDate = new Date();
  dayStartDate.setFullYear(year, month, day);
  dayStartDate.setHours(0, 0, 0, 0);
  return dayStartDate;
}
function getDaysInMonth(date) {
  return getDate(getMonthEnd(date));
}
function padStart(num) {
  var val = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2;
  var numStr = "".concat(num);
  if (numStr.length >= val) {
    return num;
  }
  return "0000".concat(numStr).slice(-val);
}
function getHoursMinutes(date) {
  var hours = padStart(getHours(date));
  var minutes = padStart(getMinutes(date));
  return "".concat(hours, ":").concat(minutes);
}
function getHoursMinutesSeconds(date) {
  var hours = padStart(getHours(date));
  var minutes = padStart(getMinutes(date));
  var seconds = padStart(getSeconds(date));
  return "".concat(hours, ":").concat(minutes, ":").concat(seconds);
}
function getISOLocalMonth(date) {
  var year = padStart(getYear(date), 4);
  var month = padStart(getMonthHuman(date));
  return "".concat(year, "-").concat(month);
}
function getISOLocalDate(date) {
  var year = padStart(getYear(date), 4);
  var month = padStart(getMonthHuman(date));
  var day = padStart(getDate(date));
  return "".concat(year, "-").concat(month, "-").concat(day);
}
function getISOLocalDateTime(date) {
  return "".concat(getISOLocalDate(date), "T").concat(getHoursMinutesSeconds(date));
}
var getPreviousCenturyStart, getNextCenturyStart, getCenturyEnd, getPreviousCenturyEnd, getNextCenturyEnd, getCenturyRange, getPreviousDecadeStart, getNextDecadeStart, getDecadeEnd, getPreviousDecadeEnd, getNextDecadeEnd, getDecadeRange, getPreviousYearStart, getNextYearStart, getYearEnd, getPreviousYearEnd, getNextYearEnd, getYearRange, getPreviousMonthStart, getNextMonthStart, getMonthEnd, getPreviousMonthEnd, getNextMonthEnd, getMonthRange, getPreviousDayStart, getNextDayStart, getDayEnd, getPreviousDayEnd, getNextDayEnd, getDayRange;
var init_esm4 = __esm({
  "node_modules/@wojtekmaj/date-utils/dist/esm/index.js"() {
    getPreviousCenturyStart = makeGetEdgeOfNeighbor(getYear, getCenturyStart, -100);
    getNextCenturyStart = makeGetEdgeOfNeighbor(getYear, getCenturyStart, 100);
    getCenturyEnd = makeGetEnd(getNextCenturyStart);
    getPreviousCenturyEnd = makeGetEdgeOfNeighbor(getYear, getCenturyEnd, -100);
    getNextCenturyEnd = makeGetEdgeOfNeighbor(getYear, getCenturyEnd, 100);
    getCenturyRange = makeGetRange([getCenturyStart, getCenturyEnd]);
    getPreviousDecadeStart = makeGetEdgeOfNeighbor(getYear, getDecadeStart, -10);
    getNextDecadeStart = makeGetEdgeOfNeighbor(getYear, getDecadeStart, 10);
    getDecadeEnd = makeGetEnd(getNextDecadeStart);
    getPreviousDecadeEnd = makeGetEdgeOfNeighbor(getYear, getDecadeEnd, -10);
    getNextDecadeEnd = makeGetEdgeOfNeighbor(getYear, getDecadeEnd, 10);
    getDecadeRange = makeGetRange([getDecadeStart, getDecadeEnd]);
    getPreviousYearStart = makeGetEdgeOfNeighbor(getYear, getYearStart, -1);
    getNextYearStart = makeGetEdgeOfNeighbor(getYear, getYearStart, 1);
    getYearEnd = makeGetEnd(getNextYearStart);
    getPreviousYearEnd = makeGetEdgeOfNeighbor(getYear, getYearEnd, -1);
    getNextYearEnd = makeGetEdgeOfNeighbor(getYear, getYearEnd, 1);
    getYearRange = makeGetRange([getYearStart, getYearEnd]);
    getPreviousMonthStart = makeGetEdgeOfNeighborMonth(getMonthStart, -1);
    getNextMonthStart = makeGetEdgeOfNeighborMonth(getMonthStart, 1);
    getMonthEnd = makeGetEnd(getNextMonthStart);
    getPreviousMonthEnd = makeGetEdgeOfNeighborMonth(getMonthEnd, -1);
    getNextMonthEnd = makeGetEdgeOfNeighborMonth(getMonthEnd, 1);
    getMonthRange = makeGetRange([getMonthStart, getMonthEnd]);
    getPreviousDayStart = makeGetEdgeOfNeighborDay(getDayStart, -1);
    getNextDayStart = makeGetEdgeOfNeighborDay(getDayStart, 1);
    getDayEnd = makeGetEnd(getNextDayStart);
    getPreviousDayEnd = makeGetEdgeOfNeighborDay(getDayEnd, -1);
    getNextDayEnd = makeGetEdgeOfNeighborDay(getDayEnd, 1);
    getDayRange = makeGetRange([getDayStart, getDayEnd]);
  }
});

// node_modules/react-clock/dist/esm/shared/utils.js
function isDefined(variable) {
  return typeof variable !== "undefined";
}
var init_utils = __esm({
  "node_modules/react-clock/dist/esm/shared/utils.js"() {
  }
});

// node_modules/react-clock/dist/esm/shared/propTypes.js
function _typeof2(obj) {
  "@babel/helpers - typeof";
  return _typeof2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof2(obj);
}
var isNumberBetween, isHandLength, isOppositeHandLength, isHandWidth, isMarkLength, isMarkWidth;
var init_propTypes = __esm({
  "node_modules/react-clock/dist/esm/shared/propTypes.js"() {
    init_utils();
    isNumberBetween = function isNumberBetween2(min, max) {
      return function(props, propName, componentName) {
        var value = props[propName];
        if (isDefined(value)) {
          if (typeof value !== "number") {
            return new Error("Invalid prop `".concat(propName, "` of type `").concat(_typeof2(value), "` supplied to `").concat(componentName, "`, expected `number`."));
          }
          if (value < min || value > max) {
            return new Error("Invalid prop `".concat(propName, "` of type `").concat(_typeof2(value), "` supplied to `").concat(componentName, "`, length must be between ").concat(min, " and ").concat(max, "."));
          }
        }
        return null;
      };
    };
    isHandLength = isNumberBetween(0, 100);
    isOppositeHandLength = isNumberBetween(-100, 100);
    isHandWidth = function isHandWidth2(props, propName, componentName) {
      var width = props[propName];
      if (isDefined(width)) {
        if (typeof width !== "number") {
          return new Error("Invalid prop `".concat(propName, "` of type `").concat(_typeof2(width), "` supplied to `").concat(componentName, "`, expected `number`."));
        }
        if (width < 0) {
          return new Error("Invalid prop `".concat(propName, "` of type `").concat(_typeof2(width), "` supplied to `").concat(componentName, "`, width must be greater or equal to 0."));
        }
      }
      return null;
    };
    isMarkLength = isHandLength;
    isMarkWidth = isHandWidth;
  }
});

// node_modules/react-clock/dist/esm/Hand.js
function Hand(_ref) {
  var _ref$angle = _ref.angle, angle = _ref$angle === void 0 ? 0 : _ref$angle, name = _ref.name, _ref$length = _ref.length, length = _ref$length === void 0 ? 100 : _ref$length, _ref$oppositeLength = _ref.oppositeLength, oppositeLength = _ref$oppositeLength === void 0 ? 10 : _ref$oppositeLength, _ref$width = _ref.width, width = _ref$width === void 0 ? 1 : _ref$width;
  return import_react2.default.createElement("div", {
    className: "react-clock__hand react-clock__".concat(name, "-hand"),
    style: {
      transform: "rotate(".concat(angle, "deg)")
    }
  }, import_react2.default.createElement("div", {
    className: "react-clock__hand__body react-clock__".concat(name, "-hand__body"),
    style: {
      width: "".concat(width, "px"),
      top: "".concat(50 - length / 2, "%"),
      bottom: "".concat(50 - oppositeLength / 2, "%")
    }
  }));
}
var import_react2, import_prop_types2;
var init_Hand = __esm({
  "node_modules/react-clock/dist/esm/Hand.js"() {
    import_react2 = __toESM(require_react());
    import_prop_types2 = __toESM(require_prop_types());
    init_propTypes();
    Hand.propTypes = {
      angle: import_prop_types2.default.number,
      length: isHandLength,
      name: import_prop_types2.default.string.isRequired,
      oppositeLength: isHandLength,
      width: import_prop_types2.default.number
    };
  }
});

// node_modules/react-clock/dist/esm/Mark.js
function Mark(_ref) {
  var _ref$angle = _ref.angle, angle = _ref$angle === void 0 ? 0 : _ref$angle, _ref$length = _ref.length, length = _ref$length === void 0 ? 10 : _ref$length, name = _ref.name, _ref$width = _ref.width, width = _ref$width === void 0 ? 1 : _ref$width, number = _ref.number;
  return import_react3.default.createElement("div", {
    className: "react-clock__mark react-clock__".concat(name, "-mark"),
    style: {
      transform: "rotate(".concat(angle, "deg)")
    }
  }, import_react3.default.createElement("div", {
    className: "react-clock__mark__body react-clock__".concat(name, "-mark__body"),
    style: {
      width: "".concat(width, "px"),
      top: 0,
      bottom: "".concat(100 - length / 2, "%")
    }
  }), number && import_react3.default.createElement("div", {
    className: "react-clock__mark__number",
    style: {
      transform: "rotate(-".concat(angle, "deg)"),
      top: "".concat(length / 2, "%")
    }
  }, number));
}
var import_react3, import_prop_types3;
var init_Mark = __esm({
  "node_modules/react-clock/dist/esm/Mark.js"() {
    import_react3 = __toESM(require_react());
    import_prop_types3 = __toESM(require_prop_types());
    init_propTypes();
    Mark.propTypes = {
      angle: import_prop_types3.default.number,
      length: isMarkLength,
      name: import_prop_types3.default.string.isRequired,
      number: import_prop_types3.default.oneOfType([import_prop_types3.default.number, import_prop_types3.default.string]),
      width: isMarkWidth
    };
  }
});

// node_modules/react-clock/dist/esm/MinuteMark.js
function MinuteMark(props) {
  return import_react4.default.createElement(Mark, props);
}
var import_react4;
var init_MinuteMark = __esm({
  "node_modules/react-clock/dist/esm/MinuteMark.js"() {
    import_react4 = __toESM(require_react());
    init_Mark();
  }
});

// node_modules/lodash.once/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.once/index.js"(exports, module) {
    var FUNC_ERROR_TEXT = "Expected a function";
    var INFINITY = 1 / 0;
    var MAX_INTEGER = 17976931348623157e292;
    var NAN = 0 / 0;
    var symbolTag = "[object Symbol]";
    var reTrim = /^\s+|\s+$/g;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    function before(n, func) {
      var result;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = void 0;
        }
        return result;
      };
    }
    function once2(func) {
      return before(2, func);
    }
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = value < 0 ? -1 : 1;
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }
    function toInteger(value) {
      var result = toFinite(value), remainder = result % 1;
      return result === result ? remainder ? result - remainder : result : 0;
    }
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = once2;
  }
});

// node_modules/get-user-locale/dist/esm/index.js
var esm_exports4 = {};
__export(esm_exports4, {
  default: () => esm_default3,
  getUserLocale: () => getUserLocale,
  getUserLocales: () => getUserLocales
});
function filterDuplicates(arr) {
  return arr.filter(function(el, index, self) {
    return self.indexOf(el) === index;
  });
}
function fixLowercaseProperties(arr) {
  return arr.map(function(el) {
    if (!el || el.indexOf("-") === -1 || el.toLowerCase() !== el) {
      return el;
    }
    var splitEl = el.split("-");
    return "".concat(splitEl[0], "-").concat(splitEl[1].toUpperCase());
  });
}
function getUserLocalesInternal() {
  var languageList = [];
  if (typeof window !== "undefined") {
    if (window.navigator.languages) {
      languageList = languageList.concat(window.navigator.languages);
    }
    if (window.navigator.language) {
      languageList.push(window.navigator.language);
    }
    if (window.navigator.userLanguage) {
      languageList.push(window.navigator.userLanguage);
    }
    if (window.navigator.browserLanguage) {
      languageList.push(window.navigator.browserLanguage);
    }
    if (window.navigator.systemLanguage) {
      languageList.push(window.navigator.systemLanguage);
    }
  }
  languageList.push("en-US");
  return fixLowercaseProperties(filterDuplicates(languageList));
}
function getUserLocaleInternal() {
  return getUserLocales()[0];
}
var import_lodash, getUserLocales, getUserLocale, esm_default3;
var init_esm5 = __esm({
  "node_modules/get-user-locale/dist/esm/index.js"() {
    import_lodash = __toESM(require_lodash());
    getUserLocales = (0, import_lodash.default)(getUserLocalesInternal);
    getUserLocale = (0, import_lodash.default)(getUserLocaleInternal);
    esm_default3 = getUserLocale;
  }
});

// node_modules/react-clock/dist/esm/shared/hourFormatter.js
var formatHour;
var init_hourFormatter = __esm({
  "node_modules/react-clock/dist/esm/shared/hourFormatter.js"() {
    init_esm5();
    formatHour = function formatHour2(locale, hour) {
      return hour.toLocaleString(locale || esm_default3());
    };
  }
});

// node_modules/react-clock/dist/esm/HourMark.js
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _objectWithoutProperties2(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose2(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function HourMark(_ref) {
  var _ref$formatHour = _ref.formatHour, formatHour3 = _ref$formatHour === void 0 ? formatHour : _ref$formatHour, locale = _ref.locale, number = _ref.number, otherProps = _objectWithoutProperties2(_ref, _excluded2);
  return import_react5.default.createElement(Mark, _extends({
    number: number && formatHour3(locale, number)
  }, otherProps));
}
var import_react5, import_prop_types4, _excluded2;
var init_HourMark = __esm({
  "node_modules/react-clock/dist/esm/HourMark.js"() {
    import_react5 = __toESM(require_react());
    import_prop_types4 = __toESM(require_prop_types());
    init_Mark();
    init_hourFormatter();
    _excluded2 = ["formatHour", "locale", "number"];
    HourMark.propTypes = {
      formatHour: import_prop_types4.default.func,
      locale: import_prop_types4.default.string,
      number: import_prop_types4.default.oneOfType([import_prop_types4.default.number, import_prop_types4.default.string])
    };
  }
});

// node_modules/react-clock/dist/esm/Clock.js
function Clock(_ref) {
  var className = _ref.className, formatHour3 = _ref.formatHour, _ref$hourHandLength = _ref.hourHandLength, hourHandLength = _ref$hourHandLength === void 0 ? 50 : _ref$hourHandLength, hourHandOppositeLength = _ref.hourHandOppositeLength, _ref$hourHandWidth = _ref.hourHandWidth, hourHandWidth = _ref$hourHandWidth === void 0 ? 4 : _ref$hourHandWidth, _ref$hourMarksLength = _ref.hourMarksLength, hourMarksLength = _ref$hourMarksLength === void 0 ? 10 : _ref$hourMarksLength, _ref$hourMarksWidth = _ref.hourMarksWidth, hourMarksWidth = _ref$hourMarksWidth === void 0 ? 3 : _ref$hourMarksWidth, locale = _ref.locale, _ref$minuteHandLength = _ref.minuteHandLength, minuteHandLength = _ref$minuteHandLength === void 0 ? 70 : _ref$minuteHandLength, minuteHandOppositeLength = _ref.minuteHandOppositeLength, _ref$minuteHandWidth = _ref.minuteHandWidth, minuteHandWidth = _ref$minuteHandWidth === void 0 ? 2 : _ref$minuteHandWidth, _ref$minuteMarksLengt = _ref.minuteMarksLength, minuteMarksLength = _ref$minuteMarksLengt === void 0 ? 6 : _ref$minuteMarksLengt, _ref$minuteMarksWidth = _ref.minuteMarksWidth, minuteMarksWidth = _ref$minuteMarksWidth === void 0 ? 1 : _ref$minuteMarksWidth, _ref$renderHourMarks = _ref.renderHourMarks, renderHourMarks = _ref$renderHourMarks === void 0 ? true : _ref$renderHourMarks, _ref$renderMinuteHand = _ref.renderMinuteHand, renderMinuteHand = _ref$renderMinuteHand === void 0 ? true : _ref$renderMinuteHand, _ref$renderMinuteMark = _ref.renderMinuteMarks, renderMinuteMarks = _ref$renderMinuteMark === void 0 ? true : _ref$renderMinuteMark, renderNumbers = _ref.renderNumbers, _ref$renderSecondHand = _ref.renderSecondHand, renderSecondHand = _ref$renderSecondHand === void 0 ? true : _ref$renderSecondHand, _ref$secondHandLength = _ref.secondHandLength, secondHandLength = _ref$secondHandLength === void 0 ? 90 : _ref$secondHandLength, secondHandOppositeLength = _ref.secondHandOppositeLength, _ref$secondHandWidth = _ref.secondHandWidth, secondHandWidth = _ref$secondHandWidth === void 0 ? 1 : _ref$secondHandWidth, _ref$size = _ref.size, size = _ref$size === void 0 ? 150 : _ref$size, value = _ref.value;
  function renderMinuteMarksFn() {
    if (!renderMinuteMarks) {
      return null;
    }
    var minuteMarks = [];
    for (var i = 1; i <= 60; i += 1) {
      var isHourMark = renderHourMarks && !(i % 5);
      if (!isHourMark) {
        minuteMarks.push(import_react6.default.createElement(MinuteMark, {
          key: "minute_".concat(i),
          angle: i * 6,
          length: minuteMarksLength,
          name: "minute",
          width: minuteMarksWidth
        }));
      }
    }
    return minuteMarks;
  }
  function renderHourMarksFn() {
    if (!renderHourMarks) {
      return null;
    }
    var hourMarks = [];
    for (var i = 1; i <= 12; i += 1) {
      hourMarks.push(import_react6.default.createElement(HourMark, {
        key: "hour_".concat(i),
        angle: i * 30,
        formatHour: formatHour3,
        length: hourMarksLength,
        locale,
        name: "hour",
        number: renderNumbers ? i : null,
        width: hourMarksWidth
      }));
    }
    return hourMarks;
  }
  function renderFace() {
    return import_react6.default.createElement("div", {
      className: "react-clock__face"
    }, renderMinuteMarksFn(), renderHourMarksFn());
  }
  function renderHourHandFn() {
    var angle = value ? getHours(value) * 30 + getMinutes(value) / 2 + getSeconds(value) / 600 : 0;
    return import_react6.default.createElement(Hand, {
      angle,
      length: hourHandLength,
      name: "hour",
      oppositeLength: hourHandOppositeLength,
      width: hourHandWidth
    });
  }
  function renderMinuteHandFn() {
    if (!renderMinuteHand) {
      return null;
    }
    var angle = value ? getHours(value) * 360 + getMinutes(value) * 6 + getSeconds(value) / 10 : 0;
    return import_react6.default.createElement(Hand, {
      angle,
      length: minuteHandLength,
      name: "minute",
      oppositeLength: minuteHandOppositeLength,
      width: minuteHandWidth
    });
  }
  function renderSecondHandFn() {
    if (!renderSecondHand) {
      return null;
    }
    var angle = value ? getMinutes(value) * 360 + getSeconds(value) * 6 : 0;
    return import_react6.default.createElement(Hand, {
      angle,
      length: secondHandLength,
      name: "second",
      oppositeLength: secondHandOppositeLength,
      width: secondHandWidth
    });
  }
  return import_react6.default.createElement("time", {
    className: mergeClassNames("react-clock", className),
    dateTime: value instanceof Date ? value.toISOString() : value,
    style: {
      width: "".concat(size, "px"),
      height: "".concat(size, "px")
    }
  }, renderFace(), renderHourHandFn(), renderMinuteHandFn(), renderSecondHandFn());
}
var import_react6, import_prop_types5;
var init_Clock2 = __esm({
  "node_modules/react-clock/dist/esm/Clock.js"() {
    import_react6 = __toESM(require_react());
    import_prop_types5 = __toESM(require_prop_types());
    init_esm2();
    init_esm4();
    init_Hand();
    init_MinuteMark();
    init_HourMark();
    init_propTypes();
    Clock.propTypes = {
      className: import_prop_types5.default.oneOfType([import_prop_types5.default.string, import_prop_types5.default.arrayOf(import_prop_types5.default.string)]),
      formatHour: import_prop_types5.default.func,
      hourHandLength: isHandLength,
      hourHandOppositeLength: isOppositeHandLength,
      hourHandWidth: isHandWidth,
      hourMarksLength: isMarkLength,
      hourMarksWidth: isMarkWidth,
      locale: import_prop_types5.default.string,
      minuteHandLength: isHandLength,
      minuteHandOppositeLength: isOppositeHandLength,
      minuteHandWidth: isHandWidth,
      minuteMarksLength: isMarkLength,
      minuteMarksWidth: isMarkWidth,
      renderHourMarks: import_prop_types5.default.bool,
      renderMinuteHand: import_prop_types5.default.bool,
      renderMinuteMarks: import_prop_types5.default.bool,
      renderNumbers: import_prop_types5.default.bool,
      renderSecondHand: import_prop_types5.default.bool,
      secondHandLength: isHandLength,
      secondHandOppositeLength: isOppositeHandLength,
      secondHandWidth: isHandWidth,
      size: import_prop_types5.default.number,
      value: import_prop_types5.default.oneOfType([import_prop_types5.default.string, import_prop_types5.default.instanceOf(Date)])
    };
  }
});

// node_modules/react-clock/dist/esm/index.js
var esm_exports5 = {};
__export(esm_exports5, {
  default: () => esm_default4
});
var esm_default4;
var init_esm6 = __esm({
  "node_modules/react-clock/dist/esm/index.js"() {
    init_Clock2();
    esm_default4 = Clock;
  }
});

// node_modules/react-time-picker/dist/Divider.js
var require_Divider = __commonJS({
  "node_modules/react-time-picker/dist/Divider.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = Divider;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function Divider(_ref) {
      var children = _ref.children;
      return _react["default"].createElement("span", {
        className: "react-time-picker__inputGroup__divider"
      }, children);
    }
    Divider.propTypes = {
      children: _propTypes["default"].node
    };
  }
});

// node_modules/merge-refs/dist/esm/index.js
var esm_exports6 = {};
__export(esm_exports6, {
  default: () => mergeRefs
});
function mergeRefs() {
  for (var _len = arguments.length, inputRefs = new Array(_len), _key = 0; _key < _len; _key++) {
    inputRefs[_key] = arguments[_key];
  }
  var filteredInputRefs = inputRefs.filter(Boolean);
  if (filteredInputRefs.length <= 1) {
    return filteredInputRefs[0];
  }
  return function mergedRefs(ref) {
    filteredInputRefs.forEach(function(inputRef) {
      if (typeof inputRef === "function") {
        inputRef(ref);
      } else {
        inputRef.current = ref;
      }
    });
  };
}
var init_esm7 = __esm({
  "node_modules/merge-refs/dist/esm/index.js"() {
  }
});

// node_modules/update-input-width/dist/esm/index.js
var esm_exports7 = {};
__export(esm_exports7, {
  default: () => esm_default5,
  getFontShorthand: () => getFontShorthand,
  measureText: () => measureText,
  updateInputWidth: () => updateInputWidth
});
function getFontShorthand(element) {
  if (!element) {
    return "";
  }
  var style = window.getComputedStyle(element);
  if (style.font) {
    return style.font;
  }
  var isFontDefined = style["font-family"] !== "";
  if (!isFontDefined) {
    return "";
  }
  var fontVariant = allowedVariants.includes(style["font-variant"]) ? style["font-variant"] : "normal";
  return "".concat(style["font-style"], " ").concat(fontVariant, " ").concat(style["font-weight"], " ").concat(style["font-size"], " / ").concat(style["line-height"], " ").concat(style["font-family"]);
}
function measureText(text, font) {
  var canvas = measureText.canvas || (measureText.canvas = document.createElement("canvas"));
  var context = canvas.getContext("2d");
  if (!context) {
    return null;
  }
  context.font = font;
  var _context$measureText = context.measureText(text), width = _context$measureText.width;
  return Math.ceil(width);
}
function updateInputWidth(element) {
  if (typeof window === "undefined" || !element) {
    return null;
  }
  var font = getFontShorthand(element);
  var text = element.value || element.placeholder;
  var width = measureText(text, font);
  if (width === null) {
    return null;
  }
  element.style.width = "".concat(width, "px");
  return width;
}
var allowedVariants, esm_default5;
var init_esm8 = __esm({
  "node_modules/update-input-width/dist/esm/index.js"() {
    allowedVariants = ["normal", "small-caps"];
    esm_default5 = updateInputWidth;
  }
});

// node_modules/react-time-picker/dist/shared/propTypes.js
var require_propTypes = __commonJS({
  "node_modules/react-time-picker/dist/shared/propTypes.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.isValueType = exports.isTime = exports.isRef = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof3(obj) {
      "@babel/helpers - typeof";
      return _typeof3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
        return typeof obj2;
      } : function(obj2) {
        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof3(obj);
    }
    var allViews = ["hour", "minute", "second"];
    var allValueTypes = [].concat(allViews);
    var hourOptionalSecondsRegExp = /^(([0-1])?[0-9]|2[0-3]):[0-5][0-9](:([0-5][0-9]))?$/;
    var isTime = function isTime2(props, propName, componentName) {
      var time = props[propName];
      if (time) {
        if (!hourOptionalSecondsRegExp.test(time)) {
          return new Error("Invalid prop `".concat(propName, "` of type `").concat(typeof minDate === "undefined" ? "undefined" : _typeof3(minDate), "` supplied to `").concat(componentName, "`, expected time in HH:mm(:ss) format."));
        }
      }
      return null;
    };
    exports.isTime = isTime;
    var isValueType = _propTypes["default"].oneOf(allValueTypes);
    exports.isValueType = isValueType;
    var isRef = _propTypes["default"].oneOfType([_propTypes["default"].func, _propTypes["default"].shape({
      current: _propTypes["default"].any
    })]);
    exports.isRef = isRef;
  }
});

// node_modules/react-time-picker/dist/TimeInput/Input.js
var require_Input = __commonJS({
  "node_modules/react-time-picker/dist/TimeInput/Input.js"(exports) {
    "use strict";
    function _typeof3(obj) {
      "@babel/helpers - typeof";
      return _typeof3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
        return typeof obj2;
      } : function(obj2) {
        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof3(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = Input;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _mergeClassNames = _interopRequireDefault((init_esm2(), __toCommonJS(esm_exports2)));
    var _mergeRefs = _interopRequireDefault((init_esm7(), __toCommonJS(esm_exports6)));
    var _updateInputWidth = _interopRequireWildcard((init_esm8(), __toCommonJS(esm_exports7)));
    var _propTypes2 = require_propTypes();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof3(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var isIEOrEdgeLegacy = typeof window !== "undefined" && /(MSIE|Trident\/|Edge\/)/.test(window.navigator.userAgent);
    var isFirefox = typeof window !== "undefined" && /Firefox/.test(window.navigator.userAgent);
    function onFocus(event) {
      var target = event.target;
      if (isIEOrEdgeLegacy) {
        requestAnimationFrame(function() {
          return target.select();
        });
      } else {
        target.select();
      }
    }
    function updateInputWidthOnFontLoad(element) {
      if (!document.fonts) {
        return;
      }
      var font = (0, _updateInputWidth.getFontShorthand)(element);
      if (!font) {
        return;
      }
      var isFontLoaded = document.fonts.check(font);
      if (isFontLoaded) {
        return;
      }
      function onLoadingDone() {
        (0, _updateInputWidth["default"])(element);
      }
      document.fonts.addEventListener("loadingdone", onLoadingDone);
    }
    function getSelectionString(input) {
      if (input && "selectionStart" in input && input.selectionStart !== null) {
        return input.value.slice(input.selectionStart, input.selectionEnd);
      }
      if ("getSelection" in window) {
        return window.getSelection().toString();
      }
      return null;
    }
    function makeOnKeyPress(maxLength) {
      return function onKeyPress(event) {
        if (isFirefox) {
          return;
        }
        var key = event.key, input = event.target;
        var value = input.value;
        var isNumberKey = key.length === 1 && /\d/.test(key);
        var selection = getSelectionString(input);
        if (!isNumberKey || !(selection || value.length < maxLength)) {
          event.preventDefault();
        }
      };
    }
    function Input(_ref) {
      var ariaLabel = _ref.ariaLabel, autoFocus = _ref.autoFocus, className = _ref.className, disabled = _ref.disabled, inputRef = _ref.inputRef, max = _ref.max, min = _ref.min, name = _ref.name, nameForClass = _ref.nameForClass, onChange = _ref.onChange, onKeyDown = _ref.onKeyDown, _onKeyUp = _ref.onKeyUp, _ref$placeholder = _ref.placeholder, placeholder = _ref$placeholder === void 0 ? "--" : _ref$placeholder, required = _ref.required, showLeadingZeros = _ref.showLeadingZeros, step = _ref.step, value = _ref.value;
      var hasLeadingZero = showLeadingZeros && value && value < 10 && (value === "0" || !value.toString().startsWith("0"));
      var maxLength = max ? max.toString().length : null;
      return [hasLeadingZero && _react["default"].createElement("span", {
        key: "leadingZero",
        className: "".concat(className, "__leadingZero")
      }, "0"), _react["default"].createElement("input", {
        key: "input",
        "aria-label": ariaLabel,
        autoComplete: "off",
        autoFocus,
        className: (0, _mergeClassNames["default"])("".concat(className, "__input"), "".concat(className, "__").concat(nameForClass || name), hasLeadingZero && "".concat(className, "__input--hasLeadingZero")),
        "data-input": "true",
        disabled,
        inputMode: "numeric",
        max,
        min,
        name,
        onChange,
        onFocus,
        onKeyDown,
        onKeyPress: makeOnKeyPress(maxLength),
        onKeyUp: function onKeyUp(event) {
          (0, _updateInputWidth["default"])(event.target);
          if (_onKeyUp) {
            _onKeyUp(event);
          }
        },
        placeholder,
        ref: (0, _mergeRefs["default"])(_updateInputWidth["default"], updateInputWidthOnFontLoad, inputRef),
        required,
        step,
        type: "number",
        value: value !== null ? value : ""
      })];
    }
    Input.propTypes = {
      ariaLabel: _propTypes["default"].string,
      autoFocus: _propTypes["default"].bool,
      className: _propTypes["default"].string.isRequired,
      disabled: _propTypes["default"].bool,
      inputRef: _propTypes2.isRef,
      max: _propTypes["default"].number,
      min: _propTypes["default"].number,
      name: _propTypes["default"].string,
      nameForClass: _propTypes["default"].string,
      onChange: _propTypes["default"].func,
      onKeyDown: _propTypes["default"].func,
      onKeyUp: _propTypes["default"].func,
      placeholder: _propTypes["default"].string,
      required: _propTypes["default"].bool,
      showLeadingZeros: _propTypes["default"].bool,
      step: _propTypes["default"].number,
      value: _propTypes["default"].string
    };
  }
});

// node_modules/react-time-picker/dist/shared/dates.js
var require_dates = __commonJS({
  "node_modules/react-time-picker/dist/shared/dates.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.convert12to24 = convert12to24;
    exports.convert24to12 = convert24to12;
    function convert12to24(hour12, amPm) {
      var hour24 = parseInt(hour12, 10);
      if (amPm === "am" && hour24 === 12) {
        hour24 = 0;
      } else if (amPm === "pm" && hour24 < 12) {
        hour24 += 12;
      }
      return hour24;
    }
    function convert24to12(hour24) {
      var hour12 = hour24 % 12 || 12;
      return [hour12, hour24 < 12 ? "am" : "pm"];
    }
  }
});

// node_modules/react-time-picker/dist/shared/dateFormatter.js
var require_dateFormatter = __commonJS({
  "node_modules/react-time-picker/dist/shared/dateFormatter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getFormatter = getFormatter;
    exports.getNumberFormatter = getNumberFormatter;
    var _getUserLocale = _interopRequireDefault((init_esm5(), __toCommonJS(esm_exports4)));
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var formatterCache = /* @__PURE__ */ new Map();
    function getFormatter(options) {
      return function(locale, date) {
        var localeWithDefault = locale || (0, _getUserLocale["default"])();
        if (!formatterCache.has(localeWithDefault)) {
          formatterCache.set(localeWithDefault, /* @__PURE__ */ new Map());
        }
        var formatterCacheLocale = formatterCache.get(localeWithDefault);
        if (!formatterCacheLocale.has(options)) {
          formatterCacheLocale.set(options, new Intl.DateTimeFormat(localeWithDefault, options).format);
        }
        return formatterCacheLocale.get(options)(date);
      };
    }
    var numberFormatterCache = /* @__PURE__ */ new Map();
    function getNumberFormatter(options) {
      return function(locale, date) {
        var localeWithDefault = locale || (0, _getUserLocale["default"])();
        if (!numberFormatterCache.has(localeWithDefault)) {
          numberFormatterCache.set(localeWithDefault, /* @__PURE__ */ new Map());
        }
        var numberFormatterCacheLocale = numberFormatterCache.get(localeWithDefault);
        if (!numberFormatterCacheLocale.has(options)) {
          numberFormatterCacheLocale.set(options, new Intl.NumberFormat(localeWithDefault, options).format);
        }
        return numberFormatterCacheLocale.get(options)(date);
      };
    }
  }
});

// node_modules/react-time-picker/dist/shared/utils.js
var require_utils = __commonJS({
  "node_modules/react-time-picker/dist/shared/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getAmPmLabels = getAmPmLabels;
    exports.safeMax = safeMax;
    exports.safeMin = safeMin;
    var _dateFormatter = require_dateFormatter();
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray(arr);
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    function _iterableToArrayLimit(arr, i) {
      var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i == null)
        return;
      var _arr = [];
      var _n = true;
      var _d = false;
      var _s, _e;
      try {
        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i)
            break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null)
            _i["return"]();
        } finally {
          if (_d)
            throw _e;
        }
      }
      return _arr;
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    var nines = ["9", "\u0669"];
    var ninesRegExp = new RegExp("[".concat(nines.join(""), "]"));
    var amPmFormatter = (0, _dateFormatter.getFormatter)({
      hour: "numeric"
    });
    function getAmPmLabels(locale) {
      var amString = amPmFormatter(locale, new Date(2017, 0, 1, 9));
      var pmString = amPmFormatter(locale, new Date(2017, 0, 1, 21));
      var _amString$split = amString.split(ninesRegExp), _amString$split2 = _slicedToArray(_amString$split, 2), am1 = _amString$split2[0], am2 = _amString$split2[1];
      var _pmString$split = pmString.split(ninesRegExp), _pmString$split2 = _slicedToArray(_pmString$split, 2), pm1 = _pmString$split2[0], pm2 = _pmString$split2[1];
      if (pm2 !== void 0) {
        if (am1 !== pm1) {
          return [am1, pm1].map(function(el) {
            return el.trim();
          });
        }
        if (am2 !== pm2) {
          return [am2, pm2].map(function(el) {
            return el.trim();
          });
        }
      }
      return ["AM", "PM"];
    }
    function isValidNumber(num) {
      return num !== null && num !== false && !Number.isNaN(Number(num));
    }
    function safeMin() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      return Math.min.apply(Math, _toConsumableArray(args.filter(isValidNumber)));
    }
    function safeMax() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      return Math.max.apply(Math, _toConsumableArray(args.filter(isValidNumber)));
    }
  }
});

// node_modules/react-time-picker/dist/TimeInput/Hour12Input.js
var require_Hour12Input = __commonJS({
  "node_modules/react-time-picker/dist/TimeInput/Hour12Input.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = Hour12Input;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _dateUtils = (init_esm4(), __toCommonJS(esm_exports3));
    var _Input = _interopRequireDefault(require_Input());
    var _dates = require_dates();
    var _propTypes2 = require_propTypes();
    var _utils = require_utils();
    var _excluded3 = ["amPm", "hour", "maxTime", "minTime", "value"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends2() {
      _extends2 = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    function _iterableToArrayLimit(arr, i) {
      var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i == null)
        return;
      var _arr = [];
      var _n = true;
      var _d = false;
      var _s, _e;
      try {
        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i)
            break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null)
            _i["return"]();
        } finally {
          if (_d)
            throw _e;
        }
      }
      return _arr;
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _objectWithoutProperties3(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose3(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0)
            continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose3(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    function Hour12Input(_ref) {
      var amPm = _ref.amPm, hour = _ref.hour, maxTime = _ref.maxTime, minTime = _ref.minTime, value = _ref.value, otherProps = _objectWithoutProperties3(_ref, _excluded3);
      var maxHour = (0, _utils.safeMin)(12, maxTime && function() {
        var _convert24to = (0, _dates.convert24to12)((0, _dateUtils.getHours)(maxTime)), _convert24to2 = _slicedToArray(_convert24to, 2), maxHourResult = _convert24to2[0], maxAmPm = _convert24to2[1];
        if (maxAmPm !== amPm) {
          return null;
        }
        return maxHourResult;
      }());
      var minHour = (0, _utils.safeMax)(1, minTime && function() {
        var _convert24to3 = (0, _dates.convert24to12)((0, _dateUtils.getHours)(minTime)), _convert24to4 = _slicedToArray(_convert24to3, 2), minHourResult = _convert24to4[0], minAmPm = _convert24to4[1];
        if (minAmPm !== amPm || minHourResult === 12) {
          return null;
        }
        return minHourResult;
      }());
      var value12 = value ? (0, _dates.convert24to12)(value)[0].toString() : "";
      return _react["default"].createElement(_Input["default"], _extends2({
        max: maxHour,
        min: minHour,
        name: "hour12",
        nameForClass: "hour",
        value: value12
      }, otherProps));
    }
    Hour12Input.propTypes = {
      amPm: _propTypes["default"].string,
      ariaLabel: _propTypes["default"].string,
      className: _propTypes["default"].string.isRequired,
      disabled: _propTypes["default"].bool,
      hour: _propTypes["default"].string,
      inputRef: _propTypes2.isRef,
      maxTime: _propTypes2.isTime,
      minTime: _propTypes2.isTime,
      onChange: _propTypes["default"].func,
      onKeyDown: _propTypes["default"].func,
      onKeyUp: _propTypes["default"].func,
      placeholder: _propTypes["default"].string,
      required: _propTypes["default"].bool,
      showLeadingZeros: _propTypes["default"].bool,
      value: _propTypes["default"].string
    };
  }
});

// node_modules/react-time-picker/dist/TimeInput/Hour24Input.js
var require_Hour24Input = __commonJS({
  "node_modules/react-time-picker/dist/TimeInput/Hour24Input.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = Hour24Input;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _dateUtils = (init_esm4(), __toCommonJS(esm_exports3));
    var _Input = _interopRequireDefault(require_Input());
    var _propTypes2 = require_propTypes();
    var _utils = require_utils();
    var _excluded3 = ["hour", "maxTime", "minTime"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends2() {
      _extends2 = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function _objectWithoutProperties3(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose3(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0)
            continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose3(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    function Hour24Input(_ref) {
      var hour = _ref.hour, maxTime = _ref.maxTime, minTime = _ref.minTime, otherProps = _objectWithoutProperties3(_ref, _excluded3);
      var maxHour = (0, _utils.safeMin)(23, maxTime && (0, _dateUtils.getHours)(maxTime));
      var minHour = (0, _utils.safeMax)(0, minTime && (0, _dateUtils.getHours)(minTime));
      return _react["default"].createElement(_Input["default"], _extends2({
        max: maxHour,
        min: minHour,
        name: "hour24",
        nameForClass: "hour"
      }, otherProps));
    }
    Hour24Input.propTypes = {
      ariaLabel: _propTypes["default"].string,
      className: _propTypes["default"].string.isRequired,
      disabled: _propTypes["default"].bool,
      hour: _propTypes["default"].string,
      inputRef: _propTypes2.isRef,
      maxTime: _propTypes2.isTime,
      minTime: _propTypes2.isTime,
      onChange: _propTypes["default"].func,
      onKeyDown: _propTypes["default"].func,
      onKeyUp: _propTypes["default"].func,
      placeholder: _propTypes["default"].string,
      required: _propTypes["default"].bool,
      showLeadingZeros: _propTypes["default"].bool,
      value: _propTypes["default"].string
    };
  }
});

// node_modules/react-time-picker/dist/TimeInput/MinuteInput.js
var require_MinuteInput = __commonJS({
  "node_modules/react-time-picker/dist/TimeInput/MinuteInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = MinuteInput;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _dateUtils = (init_esm4(), __toCommonJS(esm_exports3));
    var _Input = _interopRequireDefault(require_Input());
    var _propTypes2 = require_propTypes();
    var _utils = require_utils();
    var _excluded3 = ["hour", "maxTime", "minTime", "showLeadingZeros"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends2() {
      _extends2 = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function _objectWithoutProperties3(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose3(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0)
            continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose3(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    function MinuteInput(_ref) {
      var hour = _ref.hour, maxTime = _ref.maxTime, minTime = _ref.minTime, _ref$showLeadingZeros = _ref.showLeadingZeros, showLeadingZeros = _ref$showLeadingZeros === void 0 ? true : _ref$showLeadingZeros, otherProps = _objectWithoutProperties3(_ref, _excluded3);
      function isSameHour(date) {
        return date && hour === (0, _dateUtils.getHours)(date).toString();
      }
      var maxMinute = (0, _utils.safeMin)(59, isSameHour(maxTime) && (0, _dateUtils.getMinutes)(maxTime));
      var minMinute = (0, _utils.safeMax)(0, isSameHour(minTime) && (0, _dateUtils.getMinutes)(minTime));
      return _react["default"].createElement(_Input["default"], _extends2({
        max: maxMinute,
        min: minMinute,
        name: "minute",
        showLeadingZeros
      }, otherProps));
    }
    MinuteInput.propTypes = {
      ariaLabel: _propTypes["default"].string,
      className: _propTypes["default"].string.isRequired,
      disabled: _propTypes["default"].bool,
      hour: _propTypes["default"].string,
      inputRef: _propTypes2.isRef,
      maxTime: _propTypes2.isTime,
      minTime: _propTypes2.isTime,
      onChange: _propTypes["default"].func,
      onKeyDown: _propTypes["default"].func,
      onKeyUp: _propTypes["default"].func,
      placeholder: _propTypes["default"].string,
      required: _propTypes["default"].bool,
      showLeadingZeros: _propTypes["default"].bool,
      value: _propTypes["default"].string
    };
  }
});

// node_modules/react-time-picker/dist/TimeInput/SecondInput.js
var require_SecondInput = __commonJS({
  "node_modules/react-time-picker/dist/TimeInput/SecondInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = SecondInput;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _dateUtils = (init_esm4(), __toCommonJS(esm_exports3));
    var _Input = _interopRequireDefault(require_Input());
    var _propTypes2 = require_propTypes();
    var _utils = require_utils();
    var _excluded3 = ["hour", "maxTime", "minTime", "minute", "showLeadingZeros"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends2() {
      _extends2 = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function _objectWithoutProperties3(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose3(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0)
            continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose3(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    function SecondInput(_ref) {
      var hour = _ref.hour, maxTime = _ref.maxTime, minTime = _ref.minTime, minute = _ref.minute, _ref$showLeadingZeros = _ref.showLeadingZeros, showLeadingZeros = _ref$showLeadingZeros === void 0 ? true : _ref$showLeadingZeros, otherProps = _objectWithoutProperties3(_ref, _excluded3);
      function isSameMinute(date) {
        return date && hour === (0, _dateUtils.getHours)(date).toString() && minute === (0, _dateUtils.getMinutes)(date).toString();
      }
      var maxSecond = (0, _utils.safeMin)(59, isSameMinute(maxTime) && (0, _dateUtils.getSeconds)(maxTime));
      var minSecond = (0, _utils.safeMax)(0, isSameMinute(minTime) && (0, _dateUtils.getSeconds)(minTime));
      return _react["default"].createElement(_Input["default"], _extends2({
        max: maxSecond,
        min: minSecond,
        name: "second",
        showLeadingZeros
      }, otherProps));
    }
    SecondInput.propTypes = {
      ariaLabel: _propTypes["default"].string,
      className: _propTypes["default"].string.isRequired,
      disabled: _propTypes["default"].bool,
      hour: _propTypes["default"].string,
      inputRef: _propTypes2.isRef,
      maxTime: _propTypes2.isTime,
      minTime: _propTypes2.isTime,
      minute: _propTypes["default"].string,
      onChange: _propTypes["default"].func,
      onKeyDown: _propTypes["default"].func,
      onKeyUp: _propTypes["default"].func,
      placeholder: _propTypes["default"].string,
      required: _propTypes["default"].bool,
      showLeadingZeros: _propTypes["default"].bool,
      value: _propTypes["default"].string
    };
  }
});

// node_modules/react-time-picker/dist/TimeInput/NativeInput.js
var require_NativeInput = __commonJS({
  "node_modules/react-time-picker/dist/TimeInput/NativeInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = NativeInput;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _dateUtils = (init_esm4(), __toCommonJS(esm_exports3));
    var _propTypes2 = require_propTypes();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function NativeInput(_ref) {
      var ariaLabel = _ref.ariaLabel, disabled = _ref.disabled, maxTime = _ref.maxTime, minTime = _ref.minTime, name = _ref.name, onChange = _ref.onChange, required = _ref.required, value = _ref.value, valueType = _ref.valueType;
      var nativeValueParser = function() {
        switch (valueType) {
          case "hour":
            return function(receivedValue) {
              return "".concat((0, _dateUtils.getHours)(receivedValue), ":00");
            };
          case "minute":
            return _dateUtils.getHoursMinutes;
          case "second":
            return _dateUtils.getHoursMinutesSeconds;
          default:
            throw new Error("Invalid valueType.");
        }
      }();
      var step = function() {
        switch (valueType) {
          case "hour":
            return 3600;
          case "minute":
            return 60;
          case "second":
            return 1;
          default:
            throw new Error("Invalid valueType.");
        }
      }();
      function stopPropagation(event) {
        event.stopPropagation();
      }
      return _react["default"].createElement("input", {
        "aria-label": ariaLabel,
        disabled,
        max: maxTime ? nativeValueParser(maxTime) : null,
        min: minTime ? nativeValueParser(minTime) : null,
        name,
        onChange,
        onFocus: stopPropagation,
        required,
        step,
        style: {
          visibility: "hidden",
          position: "absolute",
          zIndex: "-999"
        },
        type: "time",
        value: value ? nativeValueParser(value) : ""
      });
    }
    NativeInput.propTypes = {
      ariaLabel: _propTypes["default"].string,
      disabled: _propTypes["default"].bool,
      maxTime: _propTypes2.isTime,
      minTime: _propTypes2.isTime,
      name: _propTypes["default"].string,
      onChange: _propTypes["default"].func,
      required: _propTypes["default"].bool,
      value: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].instanceOf(Date)]),
      valueType: _propTypes2.isValueType
    };
  }
});

// node_modules/react-time-picker/dist/TimeInput/AmPm.js
var require_AmPm = __commonJS({
  "node_modules/react-time-picker/dist/TimeInput/AmPm.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = AmPm;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _mergeClassNames = _interopRequireDefault((init_esm2(), __toCommonJS(esm_exports2)));
    var _dateUtils = (init_esm4(), __toCommonJS(esm_exports3));
    var _dates = require_dates();
    var _propTypes2 = require_propTypes();
    var _utils = require_utils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    function _iterableToArrayLimit(arr, i) {
      var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i == null)
        return;
      var _arr = [];
      var _n = true;
      var _d = false;
      var _s, _e;
      try {
        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i)
            break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null)
            _i["return"]();
        } finally {
          if (_d)
            throw _e;
        }
      }
      return _arr;
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function AmPm(_ref) {
      var ariaLabel = _ref.ariaLabel, className = _ref.className, disabled = _ref.disabled, inputRef = _ref.inputRef, locale = _ref.locale, maxTime = _ref.maxTime, minTime = _ref.minTime, onChange = _ref.onChange, required = _ref.required, value = _ref.value;
      var amDisabled = minTime && (0, _dates.convert24to12)((0, _dateUtils.getHours)(minTime))[1] === "pm";
      var pmDisabled = maxTime && (0, _dates.convert24to12)((0, _dateUtils.getHours)(maxTime))[1] === "am";
      var name = "amPm";
      var _getAmPmLabels = (0, _utils.getAmPmLabels)(locale), _getAmPmLabels2 = _slicedToArray(_getAmPmLabels, 2), amLabel = _getAmPmLabels2[0], pmLabel = _getAmPmLabels2[1];
      return _react["default"].createElement("select", {
        "aria-label": ariaLabel,
        className: (0, _mergeClassNames["default"])("".concat(className, "__input"), "".concat(className, "__").concat(name)),
        "data-input": "true",
        "data-select": "true",
        disabled,
        name,
        onChange,
        ref: inputRef,
        required,
        value: value !== null ? value : ""
      }, !value && _react["default"].createElement("option", {
        value: ""
      }, "--"), _react["default"].createElement("option", {
        disabled: amDisabled,
        value: "am"
      }, amLabel), _react["default"].createElement("option", {
        disabled: pmDisabled,
        value: "pm"
      }, pmLabel));
    }
    AmPm.propTypes = {
      ariaLabel: _propTypes["default"].string,
      className: _propTypes["default"].string.isRequired,
      disabled: _propTypes["default"].bool,
      inputRef: _propTypes2.isRef,
      locale: _propTypes["default"].string,
      maxTime: _propTypes2.isTime,
      minTime: _propTypes2.isTime,
      onChange: _propTypes["default"].func,
      required: _propTypes["default"].bool,
      value: _propTypes["default"].oneOf(["am", "pm"])
    };
  }
});

// node_modules/react-time-picker/dist/TimeInput.js
var require_TimeInput = __commonJS({
  "node_modules/react-time-picker/dist/TimeInput.js"(exports) {
    "use strict";
    function _typeof3(obj) {
      "@babel/helpers - typeof";
      return _typeof3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
        return typeof obj2;
      } : function(obj2) {
        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof3(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _dateUtils = (init_esm4(), __toCommonJS(esm_exports3));
    var _Divider = _interopRequireDefault(require_Divider());
    var _Hour12Input = _interopRequireDefault(require_Hour12Input());
    var _Hour24Input = _interopRequireDefault(require_Hour24Input());
    var _MinuteInput = _interopRequireDefault(require_MinuteInput());
    var _SecondInput = _interopRequireDefault(require_SecondInput());
    var _NativeInput = _interopRequireDefault(require_NativeInput());
    var _AmPm = _interopRequireDefault(require_AmPm());
    var _dateFormatter = require_dateFormatter();
    var _dates = require_dates();
    var _propTypes2 = require_propTypes();
    var _utils = require_utils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof3(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArrayLimit(arr, i) {
      var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i == null)
        return;
      var _arr = [];
      var _n = true;
      var _d = false;
      var _s, _e;
      try {
        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i)
            break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null)
            _i["return"]();
        } finally {
          if (_d)
            throw _e;
        }
      }
      return _arr;
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _extends2() {
      _extends2 = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function _classCallCheck2(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties2(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass2(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties2(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties2(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _inherits2(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass)
        _setPrototypeOf2(subClass, superClass);
    }
    function _setPrototypeOf2(o, p) {
      _setPrototypeOf2 = Object.setPrototypeOf || function _setPrototypeOf3(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf2(o, p);
    }
    function _createSuper2(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct2();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf2(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf2(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn2(this, result);
      };
    }
    function _possibleConstructorReturn2(self, call) {
      if (call && (_typeof3(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized2(self);
    }
    function _assertThisInitialized2(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _isNativeReflectConstruct2() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf2(o) {
      _getPrototypeOf2 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf3(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf2(o);
    }
    function _defineProperty2(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray(arr);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    var allViews = ["hour", "minute", "second"];
    function hoursAreDifferent(date1, date2) {
      return date1 && !date2 || !date1 && date2 || date1 && date2 && date1 !== date2;
    }
    function isValidInput(element) {
      return element.tagName === "INPUT" && element.type === "number";
    }
    function findInput(element, property) {
      var nextElement = element;
      do {
        nextElement = nextElement[property];
      } while (nextElement && !isValidInput(nextElement));
      return nextElement;
    }
    function focus(element) {
      if (element) {
        element.focus();
      }
    }
    function _renderCustomInputs(placeholder, elementFunctions, allowMultipleInstances) {
      var usedFunctions = [];
      var pattern = new RegExp(Object.keys(elementFunctions).map(function(el) {
        return "".concat(el, "+");
      }).join("|"), "g");
      var matches = placeholder.match(pattern);
      return placeholder.split(pattern).reduce(function(arr, element, index) {
        var divider = element && _react["default"].createElement(_Divider["default"], {
          key: "separator_".concat(index)
        }, element);
        var res = [].concat(_toConsumableArray(arr), [divider]);
        var currentMatch = matches && matches[index];
        if (currentMatch) {
          var renderFunction = elementFunctions[currentMatch] || elementFunctions[Object.keys(elementFunctions).find(function(elementFunction) {
            return currentMatch.match(elementFunction);
          })];
          if (!allowMultipleInstances && usedFunctions.includes(renderFunction)) {
            res.push(currentMatch);
          } else {
            res.push(renderFunction(currentMatch, index));
            usedFunctions.push(renderFunction);
          }
        }
        return res;
      }, []);
    }
    var formatNumber = (0, _dateFormatter.getNumberFormatter)({
      useGrouping: false
    });
    var TimeInput = function(_PureComponent) {
      _inherits2(TimeInput2, _PureComponent);
      var _super = _createSuper2(TimeInput2);
      function TimeInput2() {
        var _this;
        _classCallCheck2(this, TimeInput2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        _defineProperty2(_assertThisInitialized2(_this), "state", {
          amPm: null,
          hour: null,
          minute: null,
          second: null
        });
        _defineProperty2(_assertThisInitialized2(_this), "amPmInput", (0, _react.createRef)());
        _defineProperty2(_assertThisInitialized2(_this), "hour12Input", (0, _react.createRef)());
        _defineProperty2(_assertThisInitialized2(_this), "hour24Input", (0, _react.createRef)());
        _defineProperty2(_assertThisInitialized2(_this), "minuteInput", (0, _react.createRef)());
        _defineProperty2(_assertThisInitialized2(_this), "secondInput", (0, _react.createRef)());
        _defineProperty2(_assertThisInitialized2(_this), "onClick", function(event) {
          if (event.target === event.currentTarget) {
            var firstInput = event.target.children[1];
            focus(firstInput);
          }
        });
        _defineProperty2(_assertThisInitialized2(_this), "onKeyDown", function(event) {
          switch (event.key) {
            case "ArrowLeft":
            case "ArrowRight":
            case _this.divider: {
              event.preventDefault();
              var input = event.target;
              var property = event.key === "ArrowLeft" ? "previousElementSibling" : "nextElementSibling";
              var nextInput = findInput(input, property);
              focus(nextInput);
              break;
            }
            default:
          }
        });
        _defineProperty2(_assertThisInitialized2(_this), "onKeyUp", function(event) {
          var key = event.key, input = event.target;
          var isNumberKey = !isNaN(parseInt(key, 10));
          if (!isNumberKey) {
            return;
          }
          var value = input.value;
          var max = input.getAttribute("max");
          if (value * 10 > max || value.length >= max.length) {
            var property = "nextElementSibling";
            var nextInput = findInput(input, property);
            focus(nextInput);
          }
        });
        _defineProperty2(_assertThisInitialized2(_this), "onChange", function(event) {
          var _event$target = event.target, name = _event$target.name, value = _event$target.value;
          switch (name) {
            case "hour12": {
              _this.setState(function(prevState) {
                return {
                  hour: value ? (0, _dates.convert12to24)(parseInt(value, 10), prevState.amPm).toString() : ""
                };
              }, _this.onChangeExternal);
              break;
            }
            case "hour24": {
              _this.setState({
                hour: value
              }, _this.onChangeExternal);
              break;
            }
            default: {
              _this.setState(_defineProperty2({}, name, value), _this.onChangeExternal);
            }
          }
        });
        _defineProperty2(_assertThisInitialized2(_this), "onChangeNative", function(event) {
          var onChange = _this.props.onChange;
          var value = event.target.value;
          if (!onChange) {
            return;
          }
          var processedValue = function() {
            if (!value) {
              return null;
            }
            return value;
          }();
          onChange(processedValue, false);
        });
        _defineProperty2(_assertThisInitialized2(_this), "onChangeAmPm", function(event) {
          var value = event.target.value;
          _this.setState({
            amPm: value
          }, _this.onChangeExternal);
        });
        _defineProperty2(_assertThisInitialized2(_this), "onChangeExternal", function() {
          var onChange = _this.props.onChange;
          if (!onChange) {
            return;
          }
          var formElements = [_this.amPmInput.current, _this.hour12Input.current, _this.hour24Input.current, _this.minuteInput.current, _this.secondInput.current].filter(Boolean);
          var formElementsWithoutSelect = formElements.slice(1);
          var values = {};
          formElements.forEach(function(formElement) {
            values[formElement.name] = formElement.value;
          });
          if (formElementsWithoutSelect.every(function(formElement) {
            return !formElement.value;
          })) {
            onChange(null, false);
          } else if (formElements.every(function(formElement) {
            return formElement.value && formElement.validity.valid;
          })) {
            var hour = parseInt(values.hour24 || (0, _dates.convert12to24)(values.hour12, values.amPm) || 0, 10);
            var minute = parseInt(values.minute || 0, 10);
            var second = parseInt(values.second || 0, 10);
            var padStart2 = function padStart3(num) {
              return "0".concat(num).slice(-2);
            };
            var proposedValue = "".concat(padStart2(hour), ":").concat(padStart2(minute), ":").concat(padStart2(second));
            var processedValue = _this.getProcessedValue(proposedValue);
            onChange(processedValue, false);
          }
        });
        _defineProperty2(_assertThisInitialized2(_this), "renderHour", function(currentMatch, index) {
          if (/h/.test(currentMatch)) {
            return _this.renderHour12(currentMatch, index);
          }
          return _this.renderHour24(currentMatch, index);
        });
        _defineProperty2(_assertThisInitialized2(_this), "renderHour12", function(currentMatch, index) {
          var _this$props = _this.props, autoFocus = _this$props.autoFocus, hourAriaLabel = _this$props.hourAriaLabel, hourPlaceholder = _this$props.hourPlaceholder;
          var _this$state = _this.state, amPm = _this$state.amPm, hour = _this$state.hour;
          if (currentMatch && currentMatch.length > 2) {
            throw new Error("Unsupported token: ".concat(currentMatch));
          }
          var showLeadingZeros = currentMatch && currentMatch.length === 2;
          return _react["default"].createElement(_Hour12Input["default"], _extends2({
            key: "hour12"
          }, _this.commonInputProps, {
            amPm,
            ariaLabel: hourAriaLabel,
            autoFocus: index === 0 && autoFocus,
            inputRef: _this.hour12Input,
            placeholder: hourPlaceholder,
            showLeadingZeros,
            value: hour
          }));
        });
        _defineProperty2(_assertThisInitialized2(_this), "renderHour24", function(currentMatch, index) {
          var _this$props2 = _this.props, autoFocus = _this$props2.autoFocus, hourAriaLabel = _this$props2.hourAriaLabel, hourPlaceholder = _this$props2.hourPlaceholder;
          var hour = _this.state.hour;
          if (currentMatch && currentMatch.length > 2) {
            throw new Error("Unsupported token: ".concat(currentMatch));
          }
          var showLeadingZeros = currentMatch && currentMatch.length === 2;
          return _react["default"].createElement(_Hour24Input["default"], _extends2({
            key: "hour24"
          }, _this.commonInputProps, {
            ariaLabel: hourAriaLabel,
            autoFocus: index === 0 && autoFocus,
            inputRef: _this.hour24Input,
            placeholder: hourPlaceholder,
            showLeadingZeros,
            value: hour
          }));
        });
        _defineProperty2(_assertThisInitialized2(_this), "renderMinute", function(currentMatch, index) {
          var _this$props3 = _this.props, autoFocus = _this$props3.autoFocus, minuteAriaLabel = _this$props3.minuteAriaLabel, minutePlaceholder = _this$props3.minutePlaceholder;
          var _this$state2 = _this.state, hour = _this$state2.hour, minute = _this$state2.minute;
          if (currentMatch && currentMatch.length > 2) {
            throw new Error("Unsupported token: ".concat(currentMatch));
          }
          var showLeadingZeros = currentMatch && currentMatch.length === 2;
          return _react["default"].createElement(_MinuteInput["default"], _extends2({
            key: "minute"
          }, _this.commonInputProps, {
            ariaLabel: minuteAriaLabel,
            autoFocus: index === 0 && autoFocus,
            hour,
            inputRef: _this.minuteInput,
            placeholder: minutePlaceholder,
            showLeadingZeros,
            value: minute
          }));
        });
        _defineProperty2(_assertThisInitialized2(_this), "renderSecond", function(currentMatch, index) {
          var _this$props4 = _this.props, autoFocus = _this$props4.autoFocus, secondAriaLabel = _this$props4.secondAriaLabel, secondPlaceholder = _this$props4.secondPlaceholder;
          var _this$state3 = _this.state, hour = _this$state3.hour, minute = _this$state3.minute, second = _this$state3.second;
          if (currentMatch && currentMatch.length > 2) {
            throw new Error("Unsupported token: ".concat(currentMatch));
          }
          var showLeadingZeros = currentMatch ? currentMatch.length === 2 : true;
          return _react["default"].createElement(_SecondInput["default"], _extends2({
            key: "second"
          }, _this.commonInputProps, {
            ariaLabel: secondAriaLabel,
            autoFocus: index === 0 && autoFocus,
            hour,
            inputRef: _this.secondInput,
            minute,
            placeholder: secondPlaceholder,
            showLeadingZeros,
            value: second
          }));
        });
        _defineProperty2(_assertThisInitialized2(_this), "renderAmPm", function(currentMatch, index) {
          var _this$props5 = _this.props, amPmAriaLabel = _this$props5.amPmAriaLabel, autoFocus = _this$props5.autoFocus, locale = _this$props5.locale;
          var amPm = _this.state.amPm;
          return _react["default"].createElement(_AmPm["default"], _extends2({
            key: "ampm"
          }, _this.commonInputProps, {
            ariaLabel: amPmAriaLabel,
            autoFocus: index === 0 && autoFocus,
            inputRef: _this.amPmInput,
            locale,
            onChange: _this.onChangeAmPm,
            value: amPm
          }));
        });
        return _this;
      }
      _createClass2(TimeInput2, [{
        key: "formatTime",
        get: function get() {
          var maxDetail = this.props.maxDetail;
          var options = {
            hour: "numeric"
          };
          var level = allViews.indexOf(maxDetail);
          if (level >= 1) {
            options.minute = "numeric";
          }
          if (level >= 2) {
            options.second = "numeric";
          }
          return (0, _dateFormatter.getFormatter)(options);
        }
      }, {
        key: "formatNumber",
        get: function get() {
          return formatNumber;
        }
      }, {
        key: "getProcessedValue",
        value: function getProcessedValue(value) {
          var _this2 = this;
          var processFunction = function() {
            switch (_this2.valueType) {
              case "hour":
              case "minute":
                return _dateUtils.getHoursMinutes;
              case "second":
                return _dateUtils.getHoursMinutesSeconds;
              default:
                throw new Error("Invalid valueType.");
            }
          }();
          return processFunction(value);
        }
      }, {
        key: "valueType",
        get: function get() {
          var maxDetail = this.props.maxDetail;
          return maxDetail;
        }
      }, {
        key: "divider",
        get: function get() {
          var dividers = this.placeholder.match(/[^0-9a-z]/i);
          return dividers ? dividers[0] : null;
        }
      }, {
        key: "placeholder",
        get: function get() {
          var _this$props6 = this.props, format = _this$props6.format, locale = _this$props6.locale;
          if (format) {
            return format;
          }
          var hour24 = 21;
          var hour12 = 9;
          var minute = 13;
          var second = 14;
          var date = new Date(2017, 0, 1, hour24, minute, second);
          return this.formatTime(locale, date).replace(this.formatNumber(locale, hour12), "h").replace(this.formatNumber(locale, hour24), "H").replace(this.formatNumber(locale, minute), "mm").replace(this.formatNumber(locale, second), "ss").replace(new RegExp((0, _utils.getAmPmLabels)(locale).join("|")), "a");
        }
      }, {
        key: "commonInputProps",
        get: function get() {
          var _this$props7 = this.props, className = _this$props7.className, disabled = _this$props7.disabled, isClockOpen = _this$props7.isClockOpen, maxTime = _this$props7.maxTime, minTime = _this$props7.minTime, required = _this$props7.required;
          return {
            className,
            disabled,
            maxTime,
            minTime,
            onChange: this.onChange,
            onKeyDown: this.onKeyDown,
            onKeyUp: this.onKeyUp,
            placeholder: "--",
            required: required || isClockOpen
          };
        }
      }, {
        key: "renderCustomInputs",
        value: function renderCustomInputs() {
          var placeholder = this.placeholder;
          var format = this.props.format;
          var elementFunctions = {
            h: this.renderHour,
            H: this.renderHour,
            m: this.renderMinute,
            s: this.renderSecond,
            a: this.renderAmPm
          };
          var allowMultipleInstances = typeof format !== "undefined";
          return _renderCustomInputs(placeholder, elementFunctions, allowMultipleInstances);
        }
      }, {
        key: "renderNativeInput",
        value: function renderNativeInput() {
          var _this$props8 = this.props, disabled = _this$props8.disabled, maxTime = _this$props8.maxTime, minTime = _this$props8.minTime, name = _this$props8.name, nativeInputAriaLabel = _this$props8.nativeInputAriaLabel, required = _this$props8.required, value = _this$props8.value;
          return _react["default"].createElement(_NativeInput["default"], {
            key: "time",
            ariaLabel: nativeInputAriaLabel,
            disabled,
            maxTime,
            minTime,
            name,
            onChange: this.onChangeNative,
            required,
            value,
            valueType: this.valueType
          });
        }
      }, {
        key: "render",
        value: function render() {
          var className = this.props.className;
          return _react["default"].createElement("div", {
            className,
            onClick: this.onClick
          }, this.renderNativeInput(), this.renderCustomInputs());
        }
      }], [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, prevState) {
          var nextState = {};
          if (nextProps.isClockOpen !== prevState.isClockOpen) {
            nextState.isClockOpen = nextProps.isClockOpen;
          }
          var nextValue = nextProps.value;
          if (nextState.isClockOpen || hoursAreDifferent(nextValue, prevState.value)) {
            if (nextValue) {
              var _convert24to = (0, _dates.convert24to12)((0, _dateUtils.getHours)(nextValue));
              var _convert24to2 = _slicedToArray(_convert24to, 2);
              nextState.amPm = _convert24to2[1];
              nextState.hour = (0, _dateUtils.getHours)(nextValue).toString();
              nextState.minute = (0, _dateUtils.getMinutes)(nextValue).toString();
              nextState.second = (0, _dateUtils.getSeconds)(nextValue).toString();
            } else {
              nextState.amPm = null;
              nextState.hour = null;
              nextState.minute = null;
              nextState.second = null;
            }
            nextState.value = nextValue;
          }
          return nextState;
        }
      }]);
      return TimeInput2;
    }(_react.PureComponent);
    exports["default"] = TimeInput;
    TimeInput.defaultProps = {
      maxDetail: "minute",
      name: "time"
    };
    TimeInput.propTypes = {
      amPmAriaLabel: _propTypes["default"].string,
      autoFocus: _propTypes["default"].bool,
      className: _propTypes["default"].string.isRequired,
      disabled: _propTypes["default"].bool,
      format: _propTypes["default"].string,
      hourAriaLabel: _propTypes["default"].string,
      hourPlaceholder: _propTypes["default"].string,
      isClockOpen: _propTypes["default"].bool,
      locale: _propTypes["default"].string,
      maxDetail: _propTypes["default"].oneOf(allViews),
      maxTime: _propTypes2.isTime,
      minTime: _propTypes2.isTime,
      minuteAriaLabel: _propTypes["default"].string,
      minutePlaceholder: _propTypes["default"].string,
      name: _propTypes["default"].string,
      nativeInputAriaLabel: _propTypes["default"].string,
      onChange: _propTypes["default"].func,
      required: _propTypes["default"].bool,
      secondAriaLabel: _propTypes["default"].string,
      secondPlaceholder: _propTypes["default"].string,
      value: _propTypes["default"].oneOfType([_propTypes2.isTime, _propTypes["default"].instanceOf(Date)])
    };
  }
});

// node_modules/react-time-picker/dist/TimePicker.js
var require_TimePicker = __commonJS({
  "node_modules/react-time-picker/dist/TimePicker.js"(exports) {
    "use strict";
    function _typeof3(obj) {
      "@babel/helpers - typeof";
      return _typeof3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
        return typeof obj2;
      } : function(obj2) {
        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof3(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _makeEventProps = _interopRequireDefault((init_esm(), __toCommonJS(esm_exports)));
    var _mergeClassNames = _interopRequireDefault((init_esm2(), __toCommonJS(esm_exports2)));
    var _reactFit = _interopRequireDefault((init_Fit(), __toCommonJS(Fit_exports)));
    var _reactClock = _interopRequireDefault((init_esm6(), __toCommonJS(esm_exports5)));
    var _TimeInput = _interopRequireDefault(require_TimeInput());
    var _propTypes2 = require_propTypes();
    var _excluded3 = ["clockClassName", "className", "maxDetail", "onChange", "value"];
    var _excluded22 = ["onChange"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof3(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _objectWithoutProperties3(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose3(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0)
            continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose3(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    function _extends2() {
      _extends2 = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    function _iterableToArrayLimit(arr, i) {
      var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i == null)
        return;
      var _arr = [];
      var _n = true;
      var _d = false;
      var _s, _e;
      try {
        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i)
            break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null)
            _i["return"]();
        } finally {
          if (_d)
            throw _e;
        }
      }
      return _arr;
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _classCallCheck2(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties2(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass2(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties2(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties2(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _inherits2(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass)
        _setPrototypeOf2(subClass, superClass);
    }
    function _setPrototypeOf2(o, p) {
      _setPrototypeOf2 = Object.setPrototypeOf || function _setPrototypeOf3(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf2(o, p);
    }
    function _createSuper2(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct2();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf2(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf2(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn2(this, result);
      };
    }
    function _possibleConstructorReturn2(self, call) {
      if (call && (_typeof3(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized2(self);
    }
    function _assertThisInitialized2(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _isNativeReflectConstruct2() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf2(o) {
      _getPrototypeOf2 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf3(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf2(o);
    }
    function _defineProperty2(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var allViews = ["hour", "minute", "second"];
    var baseClassName = "react-time-picker";
    var outsideActionEvents = ["mousedown", "focusin", "touchstart"];
    var TimePicker = function(_PureComponent) {
      _inherits2(TimePicker2, _PureComponent);
      var _super = _createSuper2(TimePicker2);
      function TimePicker2() {
        var _this;
        _classCallCheck2(this, TimePicker2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        _defineProperty2(_assertThisInitialized2(_this), "state", {});
        _defineProperty2(_assertThisInitialized2(_this), "onOutsideAction", function(event) {
          var target = "composedPath" in event ? event.composedPath()[0] : event.target;
          if (_this.wrapper && !_this.wrapper.contains(target)) {
            _this.closeClock();
          }
        });
        _defineProperty2(_assertThisInitialized2(_this), "onChange", function(value) {
          var closeClock = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : _this.props.closeClock;
          var onChange = _this.props.onChange;
          if (closeClock) {
            _this.closeClock();
          }
          if (onChange) {
            onChange(value);
          }
        });
        _defineProperty2(_assertThisInitialized2(_this), "onFocus", function(event) {
          var _this$props = _this.props, disabled = _this$props.disabled, onFocus = _this$props.onFocus, openClockOnFocus = _this$props.openClockOnFocus;
          if (onFocus) {
            onFocus(event);
          }
          if (disabled) {
            return;
          }
          if (openClockOnFocus) {
            if (event.target.getAttribute("data-select") === "true") {
              return;
            }
            _this.openClock();
          }
        });
        _defineProperty2(_assertThisInitialized2(_this), "onKeyDown", function(event) {
          if (event.key === "Escape") {
            _this.closeClock();
          }
        });
        _defineProperty2(_assertThisInitialized2(_this), "openClock", function() {
          _this.setState({
            isOpen: true
          });
        });
        _defineProperty2(_assertThisInitialized2(_this), "closeClock", function() {
          _this.setState(function(prevState) {
            if (!prevState.isOpen) {
              return null;
            }
            return {
              isOpen: false
            };
          });
        });
        _defineProperty2(_assertThisInitialized2(_this), "toggleClock", function() {
          _this.setState(function(prevState) {
            return {
              isOpen: !prevState.isOpen
            };
          });
        });
        _defineProperty2(_assertThisInitialized2(_this), "stopPropagation", function(event) {
          return event.stopPropagation();
        });
        _defineProperty2(_assertThisInitialized2(_this), "clear", function() {
          return _this.onChange(null);
        });
        return _this;
      }
      _createClass2(TimePicker2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.handleOutsideActionListeners();
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps, prevState) {
          var isOpen = this.state.isOpen;
          var _this$props2 = this.props, onClockClose = _this$props2.onClockClose, onClockOpen = _this$props2.onClockOpen;
          if (isOpen !== prevState.isOpen) {
            this.handleOutsideActionListeners();
            var callback = isOpen ? onClockOpen : onClockClose;
            if (callback)
              callback();
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.handleOutsideActionListeners(false);
        }
      }, {
        key: "eventProps",
        get: function get() {
          return (0, _makeEventProps["default"])(this.props);
        }
      }, {
        key: "handleOutsideActionListeners",
        value: function handleOutsideActionListeners(shouldListen) {
          var _this2 = this;
          var isOpen = this.state.isOpen;
          var shouldListenWithFallback = typeof shouldListen !== "undefined" ? shouldListen : isOpen;
          var fnName = shouldListenWithFallback ? "addEventListener" : "removeEventListener";
          outsideActionEvents.forEach(function(eventName) {
            return document[fnName](eventName, _this2.onOutsideAction);
          });
          document[fnName]("keydown", this.onKeyDown);
        }
      }, {
        key: "renderInputs",
        value: function renderInputs() {
          var _this$props3 = this.props, amPmAriaLabel = _this$props3.amPmAriaLabel, autoFocus = _this$props3.autoFocus, clearAriaLabel = _this$props3.clearAriaLabel, clearIcon = _this$props3.clearIcon, clockAriaLabel = _this$props3.clockAriaLabel, clockIcon = _this$props3.clockIcon, disableClock = _this$props3.disableClock, disabled = _this$props3.disabled, format = _this$props3.format, hourAriaLabel = _this$props3.hourAriaLabel, hourPlaceholder = _this$props3.hourPlaceholder, isOpen = _this$props3.isOpen, locale = _this$props3.locale, maxDetail = _this$props3.maxDetail, maxTime = _this$props3.maxTime, minTime = _this$props3.minTime, minuteAriaLabel = _this$props3.minuteAriaLabel, minutePlaceholder = _this$props3.minutePlaceholder, name = _this$props3.name, nativeInputAriaLabel = _this$props3.nativeInputAriaLabel, required = _this$props3.required, secondAriaLabel = _this$props3.secondAriaLabel, secondPlaceholder = _this$props3.secondPlaceholder, value = _this$props3.value;
          var _concat = [].concat(value), _concat2 = _slicedToArray(_concat, 1), valueFrom = _concat2[0];
          var ariaLabelProps = {
            amPmAriaLabel,
            hourAriaLabel,
            minuteAriaLabel,
            nativeInputAriaLabel,
            secondAriaLabel
          };
          var placeholderProps = {
            hourPlaceholder,
            minutePlaceholder,
            secondPlaceholder
          };
          return _react["default"].createElement("div", {
            className: "".concat(baseClassName, "__wrapper")
          }, _react["default"].createElement(_TimeInput["default"], _extends2({}, ariaLabelProps, placeholderProps, {
            autoFocus,
            className: "".concat(baseClassName, "__inputGroup"),
            disabled,
            format,
            isClockOpen: isOpen,
            locale,
            maxDetail,
            maxTime,
            minTime,
            name,
            onChange: this.onChange,
            placeholder: this.placeholder,
            required,
            value: valueFrom
          })), clearIcon !== null && _react["default"].createElement("button", {
            "aria-label": clearAriaLabel,
            className: "".concat(baseClassName, "__clear-button ").concat(baseClassName, "__button"),
            disabled,
            onClick: this.clear,
            onFocus: this.stopPropagation,
            type: "button"
          }, clearIcon), clockIcon !== null && !disableClock && _react["default"].createElement("button", {
            "aria-label": clockAriaLabel,
            className: "".concat(baseClassName, "__clock-button ").concat(baseClassName, "__button"),
            disabled,
            onBlur: this.resetValue,
            onClick: this.toggleClock,
            onFocus: this.stopPropagation,
            type: "button"
          }, clockIcon));
        }
      }, {
        key: "renderClock",
        value: function renderClock() {
          var disableClock = this.props.disableClock;
          var isOpen = this.state.isOpen;
          if (isOpen === null || disableClock) {
            return null;
          }
          var _this$props4 = this.props, clockClassName = _this$props4.clockClassName, timePickerClassName = _this$props4.className, maxDetail = _this$props4.maxDetail, onChange = _this$props4.onChange, value = _this$props4.value, clockProps = _objectWithoutProperties3(_this$props4, _excluded3);
          var className = "".concat(baseClassName, "__clock");
          var _concat3 = [].concat(value), _concat4 = _slicedToArray(_concat3, 1), valueFrom = _concat4[0];
          var maxDetailIndex = allViews.indexOf(maxDetail);
          return _react["default"].createElement(_reactFit["default"], null, _react["default"].createElement("div", {
            ref: function ref(_ref) {
              if (_ref && !isOpen) {
                _ref.removeAttribute("style");
              }
            },
            className: (0, _mergeClassNames["default"])(className, "".concat(className, "--").concat(isOpen ? "open" : "closed"))
          }, _react["default"].createElement(_reactClock["default"], _extends2({
            className: clockClassName,
            renderMinuteHand: maxDetailIndex > 0,
            renderSecondHand: maxDetailIndex > 1,
            value: valueFrom
          }, clockProps))));
        }
      }, {
        key: "render",
        value: function render() {
          var _this3 = this;
          var eventProps = this.eventProps;
          var _this$props5 = this.props, className = _this$props5.className, disabled = _this$props5.disabled;
          var isOpen = this.state.isOpen;
          var onChange = eventProps.onChange, eventPropsWithoutOnChange = _objectWithoutProperties3(eventProps, _excluded22);
          return _react["default"].createElement("div", _extends2({
            className: (0, _mergeClassNames["default"])(baseClassName, "".concat(baseClassName, "--").concat(isOpen ? "open" : "closed"), "".concat(baseClassName, "--").concat(disabled ? "disabled" : "enabled"), className)
          }, eventPropsWithoutOnChange, {
            onFocus: this.onFocus,
            ref: function ref(_ref2) {
              if (!_ref2) {
                return;
              }
              _this3.wrapper = _ref2;
            }
          }), this.renderInputs(), this.renderClock());
        }
      }], [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, prevState) {
          if (nextProps.isOpen !== prevState.isOpenProps) {
            return {
              isOpen: nextProps.isOpen,
              isOpenProps: nextProps.isOpen
            };
          }
          return null;
        }
      }]);
      return TimePicker2;
    }(_react.PureComponent);
    exports["default"] = TimePicker;
    var iconProps = {
      xmlns: "http://www.w3.org/2000/svg",
      width: 19,
      height: 19,
      viewBox: "0 0 19 19",
      stroke: "black",
      strokeWidth: 2
    };
    var ClockIcon = _react["default"].createElement("svg", _extends2({}, iconProps, {
      className: "".concat(baseClassName, "__clock-button__icon ").concat(baseClassName, "__button__icon"),
      fill: "none"
    }), _react["default"].createElement("circle", {
      cx: "9.5",
      cy: "9.5",
      r: "7.5"
    }), _react["default"].createElement("path", {
      d: "M9.5 4.5 v5 h4"
    }));
    var ClearIcon = _react["default"].createElement("svg", _extends2({}, iconProps, {
      className: "".concat(baseClassName, "__clear-button__icon ").concat(baseClassName, "__button__icon")
    }), _react["default"].createElement("line", {
      x1: "4",
      x2: "15",
      y1: "4",
      y2: "15"
    }), _react["default"].createElement("line", {
      x1: "15",
      x2: "4",
      y1: "4",
      y2: "15"
    }));
    TimePicker.defaultProps = {
      clearIcon: ClearIcon,
      clockIcon: ClockIcon,
      closeClock: true,
      isOpen: null,
      maxDetail: "minute",
      openClockOnFocus: true
    };
    var isValue = _propTypes["default"].oneOfType([_propTypes2.isTime, _propTypes["default"].instanceOf(Date)]);
    TimePicker.propTypes = {
      amPmAriaLabel: _propTypes["default"].string,
      autoFocus: _propTypes["default"].bool,
      className: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].arrayOf(_propTypes["default"].string)]),
      clearAriaLabel: _propTypes["default"].string,
      clearIcon: _propTypes["default"].node,
      clockAriaLabel: _propTypes["default"].string,
      clockClassName: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].arrayOf(_propTypes["default"].string)]),
      clockIcon: _propTypes["default"].node,
      closeClock: _propTypes["default"].bool,
      disableClock: _propTypes["default"].bool,
      disabled: _propTypes["default"].bool,
      format: _propTypes["default"].string,
      hourAriaLabel: _propTypes["default"].string,
      hourPlaceholder: _propTypes["default"].string,
      isOpen: _propTypes["default"].bool,
      locale: _propTypes["default"].string,
      maxDetail: _propTypes["default"].oneOf(allViews),
      maxTime: _propTypes2.isTime,
      minTime: _propTypes2.isTime,
      minuteAriaLabel: _propTypes["default"].string,
      minutePlaceholder: _propTypes["default"].string,
      name: _propTypes["default"].string,
      nativeInputAriaLabel: _propTypes["default"].string,
      onChange: _propTypes["default"].func,
      onClockClose: _propTypes["default"].func,
      onClockOpen: _propTypes["default"].func,
      onFocus: _propTypes["default"].func,
      openClockOnFocus: _propTypes["default"].bool,
      required: _propTypes["default"].bool,
      secondAriaLabel: _propTypes["default"].string,
      secondPlaceholder: _propTypes["default"].string,
      value: _propTypes["default"].oneOfType([isValue, _propTypes["default"].arrayOf(isValue)])
    };
  }
});

// vite:dep-pre-bundle:external-conversion:C:/Users/ltdeo/Desktop/codepath/SITE-Capstone/site-capstone/Frontend/node_modules/react-time-picker/dist/TimePicker.css
var TimePicker_exports = {};
__export(TimePicker_exports, {
  default: () => default3
});
import { default as default3 } from "C:/Users/ltdeo/Desktop/codepath/SITE-Capstone/site-capstone/Frontend/node_modules/react-time-picker/dist/TimePicker.css";
import * as TimePicker_star from "C:/Users/ltdeo/Desktop/codepath/SITE-Capstone/site-capstone/Frontend/node_modules/react-time-picker/dist/TimePicker.css";
var init_TimePicker = __esm({
  "vite:dep-pre-bundle:external-conversion:C:/Users/ltdeo/Desktop/codepath/SITE-Capstone/site-capstone/Frontend/node_modules/react-time-picker/dist/TimePicker.css"() {
    __reExport(TimePicker_exports, TimePicker_star);
  }
});

// node_modules/react-time-picker/dist/entry.js
var require_entry = __commonJS({
  "node_modules/react-time-picker/dist/entry.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    init_Clock();
    var _TimePicker = _interopRequireDefault(require_TimePicker());
    init_TimePicker();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var _default = _TimePicker["default"];
    exports["default"] = _default;
  }
});

// dep:react-time-picker
var react_time_picker_default = require_entry();
export {
  react_time_picker_default as default
};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
//# sourceMappingURL=react-time-picker.js.map
